# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `dependabot-maven` gem.
# Please instead update this file by running `bin/tapioca gem dependabot-maven`.

# Java versions use dots and dashes when tokenising their versions.
# Gem::Version converts a "-" to ".pre.", so we override the `to_s` method.
#
# See https://maven.apache.org/pom.html#Version_Order_Specification for details.
#
# source://dependabot-maven//lib/dependabot/maven/version.rb#12
module Dependabot
  class << self
    # source://dependabot-common/0.234.0/lib/dependabot/logger.rb#7
    def logger; end

    # source://dependabot-common/0.234.0/lib/dependabot/logger.rb#11
    def logger=(logger); end
  end
end

# source://dependabot-maven//lib/dependabot/maven/version.rb#13
module Dependabot::Maven; end

# source://dependabot-maven//lib/dependabot/maven/file_fetcher.rb#10
class Dependabot::Maven::FileFetcher < ::Dependabot::FileFetchers::Base
  private

  # source://dependabot-maven//lib/dependabot/maven/file_fetcher.rb#43
  def child_poms; end

  # source://dependabot-maven//lib/dependabot/maven/file_fetcher.rb#37
  def extensions; end

  # source://dependabot-maven//lib/dependabot/maven/file_fetcher.rb#24
  def fetch_files; end

  # source://dependabot-maven//lib/dependabot/maven/file_fetcher.rb#147
  def fetch_pom_unique_ids(doc, check_parent_node); end

  # source://dependabot-maven//lib/dependabot/maven/file_fetcher.rb#133
  def fetched_pom_is_parent(pom, parent_pom); end

  # source://dependabot-maven//lib/dependabot/maven/file_fetcher.rb#115
  def parent_path_for_pom(pom); end

  # source://dependabot-maven//lib/dependabot/maven/file_fetcher.rb#33
  def pom; end

  # source://dependabot-maven//lib/dependabot/maven/file_fetcher.rb#56
  def recursively_fetch_child_poms(pom, fetched_filenames:); end

  # source://dependabot-maven//lib/dependabot/maven/file_fetcher.rb#88
  def recursively_fetch_relative_path_parents(pom, fetched_filenames:); end

  # source://dependabot-maven//lib/dependabot/maven/file_fetcher.rb#47
  def relative_path_parents(fetched_files); end

  class << self
    # @return [Boolean]
    #
    # source://dependabot-maven//lib/dependabot/maven/file_fetcher.rb#14
    def required_files_in?(filenames); end

    # source://dependabot-maven//lib/dependabot/maven/file_fetcher.rb#18
    def required_files_message; end
  end
end

# source://dependabot-maven//lib/dependabot/maven/file_fetcher.rb#11
Dependabot::Maven::FileFetcher::MODULE_SELECTOR = T.let(T.unsafe(nil), String)

# source://dependabot-maven//lib/dependabot/maven/file_parser.rb#16
class Dependabot::Maven::FileParser < ::Dependabot::FileParsers::Base
  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#35
  def parse; end

  private

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#103
  def build_dependency(pom, dependency_node, name); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#299
  def check_required_files; end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#143
  def dependency_classifier(dependency_node, pom); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#89
  def dependency_from_dependency_node(pom, dependency_node); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#96
  def dependency_from_plugin_node(pom, dependency_node); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#194
  def dependency_groups(pom, dependency_node); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#127
  def dependency_name(dependency_node, pom); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#185
  def dependency_requirement(pom, dependency_node); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#198
  def dependency_scope(pom, dependency_node); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#174
  def dependency_version(pom, dependency_node); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#228
  def evaluated_value(value, pom); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#70
  def extensionfile_dependencies(extension); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#280
  def extensionfiles; end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#285
  def internal_dependency_names; end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#207
  def packaging_type(pom, dependency_node); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#165
  def plugin_group_id(pom, node); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#152
  def plugin_name(dependency_node, pom); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#44
  def pomfile_dependencies(pom); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#273
  def pomfiles; end

  # @raise [DependencyFileNotEvaluatable]
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#239
  def property_source(dependency_node, pom); end

  # Cached, since this can makes calls to the registry (to get property
  # values from parent POMs)
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#268
  def property_value_finder; end

  # @raise [DependencyFileNotEvaluatable]
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#254
  def value_for_property(property_name, pom); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser.rb#217
  def version_property_name(dependency_node); end
end

# The following "dependencies" are candidates for updating:
# - The project's parent
# - Any dependencies (incl. those in dependencyManagement or plugins)
# - Any plugins (incl. those in pluginManagement)
# - Any extensions
#
# source://dependabot-maven//lib/dependabot/maven/file_parser.rb#25
Dependabot::Maven::FileParser::DEPENDENCY_SELECTOR = T.let(T.unsafe(nil), String)

# source://dependabot-maven//lib/dependabot/maven/file_parser.rb#30
Dependabot::Maven::FileParser::EXTENSION_SELECTOR = T.let(T.unsafe(nil), String)

# source://dependabot-maven//lib/dependabot/maven/file_parser.rb#29
Dependabot::Maven::FileParser::PLUGIN_SELECTOR = T.let(T.unsafe(nil), String)

# Regex to get the property name from a declaration that uses a property
#
# source://dependabot-maven//lib/dependabot/maven/file_parser.rb#33
Dependabot::Maven::FileParser::PROPERTY_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-maven//lib/dependabot/maven/file_parser/pom_fetcher.rb#13
class Dependabot::Maven::FileParser::PomFetcher
  # @return [PomFetcher] a new instance of PomFetcher
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser/pom_fetcher.rb#14
  def initialize(dependency_files:); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/pom_fetcher.rb#42
  def fetch_remote_parent_pom(group_id, artifact_id, version, urls_to_try); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/pom_fetcher.rb#19
  def internal_dependency_poms; end

  private

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser/pom_fetcher.rb#119
  def dependency_files; end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/pom_fetcher.rb#110
  def fetch(url); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/pom_fetcher.rb#95
  def fetch_snapshot_pom_url(group_id, artifact_id, version, base_url); end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser/pom_fetcher.rb#115
  def pom?(content); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/pom_fetcher.rb#89
  def remote_pom_snapshot_metadata_url(group_id, artifact_id, version, base_repo_url); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/pom_fetcher.rb#83
  def remote_pom_snapshot_url(group_id, artifact_id, version, snapshot_version, base_repo_url); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/pom_fetcher.rb#77
  def remote_pom_url(group_id, artifact_id, version, base_repo_url); end
end

# source://dependabot-maven//lib/dependabot/maven/file_parser/property_value_finder.rb#16
class Dependabot::Maven::FileParser::PropertyValueFinder
  # @return [PropertyValueFinder] a new instance of PropertyValueFinder
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser/property_value_finder.rb#22
  def initialize(dependency_files:, credentials: T.unsafe(nil)); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/property_value_finder.rb#28
  def property_details(property_name:, callsite_pom:); end

  private

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser/property_value_finder.rb#64
  def dependency_files; end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/property_value_finder.rb#71
  def parent_pom(pom); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/property_value_finder.rb#91
  def parent_repository_urls(pom); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/property_value_finder.rb#98
  def repositories_finder; end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/property_value_finder.rb#66
  def sanitize_property_name(property_name); end
end

# source://dependabot-maven//lib/dependabot/maven/file_parser/property_value_finder.rb#20
Dependabot::Maven::FileParser::PropertyValueFinder::DOT_SEPARATOR_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#17
class Dependabot::Maven::FileParser::RepositoriesFinder
  # @return [RepositoriesFinder] a new instance of RepositoriesFinder
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#26
  def initialize(pom_fetcher:, dependency_files: T.unsafe(nil), credentials: T.unsafe(nil), evaluate_properties: T.unsafe(nil)); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#40
  def central_repo_url; end

  # Collect all repository URLs from this POM and its parents
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#46
  def repository_urls(pom:, exclude_inherited: T.unsafe(nil)); end

  private

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#123
  def contains_property?(value); end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#64
  def dependency_files; end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#91
  def evaluate_properties?; end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#127
  def evaluated_value(value, pom); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#72
  def gather_repository_urls(pom:, exclude_inherited: T.unsafe(nil)); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#96
  def parent_pom(pom, repo_urls); end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#158
  def property_regex; end

  # Cached, since this can makes calls to the registry (to get property
  # values from parent POMs)
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#153
  def property_value_finder; end

  # The Central Repository is included in the Super POM, which is
  # always inherited from.
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#68
  def super_pom; end

  # source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#117
  def urls_from_credentials; end

  # @raise [DependencyFileNotEvaluatable]
  #
  # source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#137
  def value_for_property(property_name, pom); end
end

# In theory we should check the artifact type and either look in
# <repositories> or <pluginRepositories>. In practice it's unlikely
# anyone makes this distinction.
#
# source://dependabot-maven//lib/dependabot/maven/file_parser/repositories_finder.rb#23
Dependabot::Maven::FileParser::RepositoriesFinder::REPOSITORY_SELECTOR = T.let(T.unsafe(nil), String)

# source://dependabot-maven//lib/dependabot/maven/file_updater.rb#10
class Dependabot::Maven::FileUpdater < ::Dependabot::FileUpdaters::Base
  # source://dependabot-maven//lib/dependabot/maven/file_updater.rb#22
  def updated_dependency_files; end

  private

  # source://dependabot-maven//lib/dependabot/maven/file_updater.rb#46
  def check_required_files; end

  # The declaration finder may need to make remote calls (to get parent
  # POMs if it's searching for the value of a property), so we cache it.
  #
  # source://dependabot-maven//lib/dependabot/maven/file_updater.rb#128
  def declaration_finder(dependency, requirement); end

  # source://dependabot-maven//lib/dependabot/maven/file_updater.rb#122
  def original_file_declarations(dependency, requirement); end

  # source://dependabot-maven//lib/dependabot/maven/file_updater.rb#147
  def original_pomfiles; end

  # source://dependabot-maven//lib/dependabot/maven/file_updater.rb#103
  def remove_property_suffix_in_pom(dep, pom, req); end

  # source://dependabot-maven//lib/dependabot/maven/file_updater.rb#50
  def update_files_for_dependency(original_files:, dependency:); end

  # source://dependabot-maven//lib/dependabot/maven/file_updater.rb#78
  def update_pomfiles_for_property_change(pomfiles, req); end

  # source://dependabot-maven//lib/dependabot/maven/file_updater.rb#89
  def update_version_in_file(dependency, file, previous_req, requirement); end

  # source://dependabot-maven//lib/dependabot/maven/file_updater.rb#138
  def updated_file_declaration(old_declaration, previous_req, requirement); end

  class << self
    # source://dependabot-maven//lib/dependabot/maven/file_updater.rb#14
    def updated_files_regex; end
  end
end

# source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#12
class Dependabot::Maven::FileUpdater::DeclarationFinder
  # @return [DeclarationFinder] a new instance of DeclarationFinder
  #
  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#20
  def initialize(dependency:, dependency_files:, declaring_requirement:); end

  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#30
  def declaration_nodes; end

  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#26
  def declaration_strings; end

  # Returns the value of attribute declaring_requirement.
  #
  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#18
  def declaring_requirement; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#18
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#18
  def dependency_files; end

  private

  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#38
  def declaring_pom; end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#89
  def declaring_requirement_matches?(node); end

  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#83
  def deep_find_declarations(string); end

  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#46
  def dependency_name; end

  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#129
  def dependency_scope(dependency_node); end

  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#138
  def evaluated_value(value); end

  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#50
  def fetch_pom_declaration_strings; end

  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#76
  def node_group_id(node); end

  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#119
  def packaging_type(dependency_node); end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#107
  def packaging_type_matches?(node); end

  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#160
  def property_value_finder; end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#112
  def scope_matches?(node); end
end

# source://dependabot-maven//lib/dependabot/maven/file_updater/declaration_finder.rb#13
Dependabot::Maven::FileUpdater::DeclarationFinder::DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-maven//lib/dependabot/maven/file_updater/property_value_updater.rb#13
class Dependabot::Maven::FileUpdater::PropertyValueUpdater
  # @return [PropertyValueUpdater] a new instance of PropertyValueUpdater
  #
  # source://dependabot-maven//lib/dependabot/maven/file_updater/property_value_updater.rb#14
  def initialize(dependency_files:); end

  # source://dependabot-maven//lib/dependabot/maven/file_updater/property_value_updater.rb#18
  def update_pomfiles_for_property_change(property_name:, callsite_pom:, updated_value:); end

  private

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-maven//lib/dependabot/maven/file_updater/property_value_updater.rb#54
  def dependency_files; end

  # source://dependabot-maven//lib/dependabot/maven/file_updater/property_value_updater.rb#56
  def property_value_finder; end

  # source://dependabot-maven//lib/dependabot/maven/file_updater/property_value_updater.rb#62
  def update_file(file:, content:); end
end

# source://dependabot-maven//lib/dependabot/maven/metadata_finder.rb#15
class Dependabot::Maven::MetadataFinder < ::Dependabot::MetadataFinders::Base
  private

  # source://dependabot-maven//lib/dependabot/maven/metadata_finder.rb#163
  def auth_headers; end

  # source://dependabot-maven//lib/dependabot/maven/metadata_finder.rb#120
  def dependency_artifact_id; end

  # source://dependabot-maven//lib/dependabot/maven/metadata_finder.rb#107
  def dependency_pom_file; end

  # source://dependabot-maven//lib/dependabot/maven/metadata_finder.rb#20
  def look_up_source; end

  # source://dependabot-maven//lib/dependabot/maven/metadata_finder.rb#56
  def look_up_source_in_pom(pom); end

  # source://dependabot-maven//lib/dependabot/maven/metadata_finder.rb#157
  def maven_repo_dependency_url; end

  # source://dependabot-maven//lib/dependabot/maven/metadata_finder.rb#148
  def maven_repo_url; end

  # source://dependabot-maven//lib/dependabot/maven/metadata_finder.rb#126
  def parent_pom_file(pom); end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/metadata_finder.rb#34
  def repo_has_subdir_for_dep?(tmp_source); end

  # source://dependabot-maven//lib/dependabot/maven/metadata_finder.rb#95
  def source_from_anywhere_in_pom(pom); end

  # source://dependabot-maven//lib/dependabot/maven/metadata_finder.rb#70
  def substitute_properties_in_source_url(source_url, pom); end
end

# source://dependabot-maven//lib/dependabot/maven/metadata_finder.rb#16
Dependabot::Maven::MetadataFinder::DOT_SEPARATOR_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-maven//lib/dependabot/maven/requirement.rb#9
class Dependabot::Maven::Requirement < ::Gem::Requirement
  # @return [Requirement] a new instance of Requirement
  #
  # source://dependabot-maven//lib/dependabot/maven/requirement.rb#34
  def initialize(*requirements); end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/requirement.rb#42
  def satisfied_by?(version); end

  private

  # source://dependabot-maven//lib/dependabot/maven/requirement.rb#61
  def convert_java_constraint_to_ruby_constraint(req_string); end

  # source://dependabot-maven//lib/dependabot/maven/requirement.rb#98
  def convert_java_equals_req_to_ruby(req_string); end

  # source://dependabot-maven//lib/dependabot/maven/requirement.rb#78
  def convert_java_range_to_ruby_range(req_string); end

  # source://dependabot-maven//lib/dependabot/maven/requirement.rb#107
  def convert_wildcard_req(req_string); end

  class << self
    # source://dependabot-maven//lib/dependabot/maven/requirement.rb#15
    def parse(obj); end

    # source://dependabot-maven//lib/dependabot/maven/requirement.rb#28
    def requirements_array(requirement_string); end

    private

    # source://dependabot-maven//lib/dependabot/maven/requirement.rb#49
    def split_java_requirement(req_string); end
  end
end

# source://dependabot-maven//lib/dependabot/maven/requirement.rb#11
Dependabot::Maven::Requirement::OR_SYNTAX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-maven//lib/dependabot/maven/requirement.rb#13
Dependabot::Maven::Requirement::PATTERN = T.let(T.unsafe(nil), Regexp)

# source://dependabot-maven//lib/dependabot/maven/requirement.rb#12
Dependabot::Maven::Requirement::PATTERN_RAW = T.let(T.unsafe(nil), String)

# source://dependabot-maven//lib/dependabot/maven/update_checker.rb#10
class Dependabot::Maven::UpdateChecker < ::Dependabot::UpdateCheckers::Base
  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#19
  def latest_resolvable_version; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#38
  def latest_resolvable_version_with_no_unlock; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#15
  def latest_version; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#34
  def lowest_resolvable_security_fix_version; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#30
  def lowest_security_fix_version; end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#62
  def requirements_unlocked_or_can_be?; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#49
  def updated_requirements; end

  private

  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#168
  def all_property_based_dependencies; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#162
  def declarations_using_a_property; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#106
  def latest_version_details; end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#78
  def latest_version_resolvable_with_full_unlock?; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#110
  def lowest_security_fix_version_details; end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#94
  def numeric_version_can_update?(requirements_to_unlock:); end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#88
  def numeric_version_up_to_date?; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#100
  def preferred_version_details; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#127
  def property_updater; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#138
  def property_value_finder; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#84
  def updated_dependencies_after_full_unlock; end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#144
  def version_comes_from_multi_dependency_property?; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker.rb#115
  def version_finder; end
end

# source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#11
class Dependabot::Maven::UpdateChecker::PropertyUpdater
  # @return [PropertyUpdater] a new instance of PropertyUpdater
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#15
  def initialize(dependency:, dependency_files:, credentials:, target_version_details:, ignored_versions:); end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#25
  def update_possible?; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#45
  def updated_dependencies; end

  private

  # Returns the value of attribute credentials.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#63
  def credentials; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#66
  def dependencies_using_property; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#63
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#63
  def dependency_files; end

  # Returns the value of attribute ignored_versions.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#63
  def ignored_versions; end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#97
  def includes_property_reference?(string); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#113
  def pom; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#80
  def property_name; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#90
  def property_source; end

  # Returns the value of attribute source_url.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#63
  def source_url; end

  # Returns the value of attribute target_version.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#63
  def target_version; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#121
  def updated_requirements(dep); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#117
  def updated_version(dep); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/property_updater.rb#101
  def version_string(dep); end
end

# source://dependabot-maven//lib/dependabot/maven/update_checker/requirements_updater.rb#16
class Dependabot::Maven::UpdateChecker::RequirementsUpdater
  # @return [RequirementsUpdater] a new instance of RequirementsUpdater
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/requirements_updater.rb#17
  def initialize(requirements:, latest_version:, source_url:, properties_to_update:); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/requirements_updater.rb#27
  def updated_requirements; end

  private

  # Returns the value of attribute latest_version.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/requirements_updater.rb#47
  def latest_version; end

  # Returns the value of attribute properties_to_update.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/requirements_updater.rb#47
  def properties_to_update; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/requirements_updater.rb#79
  def requirement_class; end

  # Returns the value of attribute requirements.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/requirements_updater.rb#47
  def requirements; end

  # Returns the value of attribute source_url.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/requirements_updater.rb#47
  def source_url; end

  # This is really only a Gradle thing, but Gradle relies on this
  # RequirementsUpdater too
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/requirements_updater.rb#67
  def update_dynamic_requirement(req_string); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/requirements_updater.rb#59
  def update_exact_requirement(req_string); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/requirements_updater.rb#50
  def update_requirement(req_string); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/requirements_updater.rb#83
  def updated_source; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/requirements_updater.rb#75
  def version_class; end
end

# source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#16
class Dependabot::Maven::UpdateChecker::VersionFinder
  # @return [VersionFinder] a new instance of VersionFinder
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#19
  def initialize(dependency:, dependency_files:, credentials:, ignored_versions:, security_advisories:, raise_on_ignored: T.unsafe(nil)); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#32
  def latest_version_details; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#43
  def lowest_security_fix_version_details; end

  # @raise [PrivateSourceAuthenticationFailure]
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#57
  def versions; end

  private

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#290
  def auth_headers(maven_repo_url); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#286
  def auth_headers_finder; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#280
  def central_repo_urls; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#182
  def check_response(response, repository_url); end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#77
  def credentials; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#218
  def credentials_repository_details; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#77
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#77
  def dependency_files; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#263
  def dependency_files_url(repository_url, version); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#157
  def dependency_metadata(repository_details); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#254
  def dependency_metadata_url(repository_url); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#164
  def fetch_dependency_metadata(repository_details); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#86
  def filter_date_based_versions(possible_versions); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#98
  def filter_ignored_versions(possible_versions); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#116
  def filter_lower_versions(possible_versions); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#80
  def filter_prereleases(possible_versions); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#93
  def filter_version_types(possible_versions); end

  # Returns the value of attribute forbidden_urls.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#77
  def forbidden_urls; end

  # Returns the value of attribute ignored_versions.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#77
  def ignored_versions; end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#229
  def matches_dependency_version_type?(comparison_version); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#249
  def pom; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#209
  def pom_repository_details; end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#136
  def released?(version); end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#190
  def repositories; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#200
  def repository_finder; end

  # Returns the value of attribute security_advisories.
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#77
  def security_advisories; end

  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#276
  def version_class; end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#130
  def wants_date_based_version?; end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#124
  def wants_prerelease?; end
end

# source://dependabot-maven//lib/dependabot/maven/update_checker/version_finder.rb#17
Dependabot::Maven::UpdateChecker::VersionFinder::TYPE_SUFFICES = T.let(T.unsafe(nil), Array)

# source://dependabot-maven//lib/dependabot/maven/utils/auth_headers_finder.rb#6
module Dependabot::Maven::Utils; end

# source://dependabot-maven//lib/dependabot/maven/utils/auth_headers_finder.rb#7
class Dependabot::Maven::Utils::AuthHeadersFinder
  # @return [AuthHeadersFinder] a new instance of AuthHeadersFinder
  #
  # source://dependabot-maven//lib/dependabot/maven/utils/auth_headers_finder.rb#8
  def initialize(credentials); end

  # source://dependabot-maven//lib/dependabot/maven/utils/auth_headers_finder.rb#12
  def auth_headers(maven_repo_url); end

  private

  # Returns the value of attribute credentials.
  #
  # source://dependabot-maven//lib/dependabot/maven/utils/auth_headers_finder.rb#31
  def credentials; end

  # source://dependabot-maven//lib/dependabot/maven/utils/auth_headers_finder.rb#33
  def gitlab_auth_headers(maven_repo_url); end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/utils/auth_headers_finder.rb#50
  def gitlab_maven_repo?(maven_repo_path); end
end

# source://dependabot-maven//lib/dependabot/maven/version.rb#14
class Dependabot::Maven::Version < ::Dependabot::Version
  # @return [Version] a new instance of Version
  #
  # source://dependabot-maven//lib/dependabot/maven/version.rb#42
  def initialize(version); end

  # source://dependabot-maven//lib/dependabot/maven/version.rb#64
  def <=>(other); end

  # source://dependabot-maven//lib/dependabot/maven/version.rb#47
  def inspect; end

  # @return [Boolean]
  #
  # source://dependabot-maven//lib/dependabot/maven/version.rb#55
  def prerelease?; end

  # source://dependabot-maven//lib/dependabot/maven/version.rb#51
  def to_s; end

  private

  # source://dependabot-maven//lib/dependabot/maven/version.rb#160
  def compare_prefixed_token(prefix:, token:, other_prefix:, other_token:); end

  # source://dependabot-maven//lib/dependabot/maven/version.rb#174
  def compare_token(token:, other_token:); end

  # source://dependabot-maven//lib/dependabot/maven/version.rb#132
  def convert_dates(version, other_version); end

  # source://dependabot-maven//lib/dependabot/maven/version.rb#113
  def fill_tokens(version); end

  # source://dependabot-maven//lib/dependabot/maven/version.rb#144
  def pad_for_comparison(prefixed_tokens, other_prefixed_tokens); end

  # source://dependabot-maven//lib/dependabot/maven/version.rb#140
  def split_into_prefixed_tokens(version); end

  # source://dependabot-maven//lib/dependabot/maven/version.rb#106
  def stringify_version(version); end

  # source://dependabot-maven//lib/dependabot/maven/version.rb#96
  def tokens; end

  # source://dependabot-maven//lib/dependabot/maven/version.rb#124
  def trim_version(version); end

  class << self
    # @return [Boolean]
    #
    # source://dependabot-maven//lib/dependabot/maven/version.rb#36
    def correct?(version); end
  end
end

# source://dependabot-maven//lib/dependabot/maven/version.rb#34
Dependabot::Maven::Version::ANCHORED_VERSION_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://dependabot-maven//lib/dependabot/maven/version.rb#21
Dependabot::Maven::Version::NAMED_QUALIFIERS_HIERARCHY = T.let(T.unsafe(nil), Hash)

# source://dependabot-maven//lib/dependabot/maven/version.rb#15
Dependabot::Maven::Version::NULL_VALUES = T.let(T.unsafe(nil), Array)

# source://dependabot-maven//lib/dependabot/maven/version.rb#16
Dependabot::Maven::Version::PREFIXED_TOKEN_HIERARCHY = T.let(T.unsafe(nil), Hash)

# source://dependabot-maven//lib/dependabot/maven/version.rb#30
Dependabot::Maven::Version::VERSION_PATTERN = T.let(T.unsafe(nil), String)
