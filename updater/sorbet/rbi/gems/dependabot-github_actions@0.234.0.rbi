# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `dependabot-github_actions` gem.
# Please instead update this file by running `bin/tapioca gem dependabot-github_actions`.

# For docs, see
# https://help.github.com/en/articles/configuring-a-workflow#referencing-actions-in-your-workflow
# https://help.github.com/en/articles/workflow-syntax-for-github-actions#example-using-versioned-actions
#
# source://dependabot-github_actions//lib/dependabot/github_actions/file_fetcher.rb#7
module Dependabot
  class << self
    # source://dependabot-common/0.234.0/lib/dependabot/logger.rb#7
    def logger; end

    # source://dependabot-common/0.234.0/lib/dependabot/logger.rb#11
    def logger=(logger); end
  end
end

# source://dependabot-github_actions//lib/dependabot/github_actions/file_fetcher.rb#8
module Dependabot::GithubActions; end

# source://dependabot-github_actions//lib/dependabot/github_actions/file_fetcher.rb#9
class Dependabot::GithubActions::FileFetcher < ::Dependabot::FileFetchers::Base
  private

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_fetcher.rb#69
  def correctly_encoded_workflow_files; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_fetcher.rb#22
  def fetch_files; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_fetcher.rb#73
  def incorrectly_encoded_workflow_files; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_fetcher.rb#48
  def workflow_files; end

  class << self
    # @return [Boolean]
    #
    # source://dependabot-github_actions//lib/dependabot/github_actions/file_fetcher.rb#12
    def required_files_in?(filenames); end

    # source://dependabot-github_actions//lib/dependabot/github_actions/file_fetcher.rb#16
    def required_files_message; end
  end
end

# source://dependabot-github_actions//lib/dependabot/github_actions/file_fetcher.rb#10
Dependabot::GithubActions::FileFetcher::FILENAME_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://dependabot-github_actions//lib/dependabot/github_actions/file_parser.rb#17
class Dependabot::GithubActions::FileParser < ::Dependabot::FileParsers::Base
  # source://dependabot-github_actions//lib/dependabot/github_actions/file_parser.rb#27
  def parse; end

  private

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_parser.rb#82
  def build_github_dependency(file, string); end

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_parser.rb#143
  def check_required_files; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_parser.rb#116
  def deep_fetch_uses(json_obj, found_uses = T.unsafe(nil)); end

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_parser.rb#124
  def deep_fetch_uses_from_hash(json_object, found_uses); end

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_parser.rb#92
  def github_dependency(file, string, hostname); end

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_parser.rb#150
  def version_class; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_parser.rb#39
  def workfile_file_dependencies(file); end

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_parser.rb#137
  def workflow_files; end
end

# source://dependabot-github_actions//lib/dependabot/github_actions/file_parser.rb#20
Dependabot::GithubActions::FileParser::GITHUB_REPO_REFERENCE = T.let(T.unsafe(nil), Regexp)

# source://dependabot-github_actions//lib/dependabot/github_actions/file_updater.rb#10
class Dependabot::GithubActions::FileUpdater < ::Dependabot::FileUpdaters::Base
  # source://dependabot-github_actions//lib/dependabot/github_actions/file_updater.rb#15
  def updated_dependency_files; end

  private

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_updater.rb#41
  def check_required_files; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_updater.rb#36
  def dependency; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_updater.rb#95
  def updated_version_comment(comment, old_ref, new_ref); end

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_updater.rb#48
  def updated_workflow_file_content(file); end

  # source://dependabot-github_actions//lib/dependabot/github_actions/file_updater.rb#111
  def version_class; end

  class << self
    # source://dependabot-github_actions//lib/dependabot/github_actions/file_updater.rb#11
    def updated_files_regex; end
  end
end

# source://dependabot-github_actions//lib/dependabot/github_actions/metadata_finder.rb#9
class Dependabot::GithubActions::MetadataFinder < ::Dependabot::MetadataFinders::Base
  private

  # source://dependabot-github_actions//lib/dependabot/github_actions/metadata_finder.rb#12
  def look_up_source; end
end

# Lifted from the bundler package manager
#
# source://dependabot-github_actions//lib/dependabot/github_actions/requirement.rb#13
class Dependabot::GithubActions::Requirement < ::Gem::Requirement
  # Patches Gem::Requirement to make it accept requirement strings like
  # "~> 4.2.5, >= 4.2.5.1" without first needing to split them.
  #
  # @return [Requirement] a new instance of Requirement
  #
  # source://dependabot-github_actions//lib/dependabot/github_actions/requirement.rb#20
  def initialize(*requirements); end

  class << self
    # For consistency with other languages, we define a requirements array.
    # Ruby doesn't have an `OR` separator for requirements, so it always
    # contains a single element.
    #
    # source://dependabot-github_actions//lib/dependabot/github_actions/requirement.rb#14
    def requirements_array(requirement_string); end
  end
end

# source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#13
class Dependabot::GithubActions::UpdateChecker < ::Dependabot::UpdateCheckers::Base
  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#18
  def latest_resolvable_version; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#23
  def latest_resolvable_version_with_no_unlock; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#14
  def latest_version; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#32
  def lowest_resolvable_security_fix_version; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#28
  def lowest_security_fix_version; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#37
  def updated_requirements; end

  private

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#60
  def active_advisories; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#214
  def current_commit; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#75
  def fetch_latest_version; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#82
  def fetch_latest_version_for_git_dependency; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#106
  def fetch_lowest_security_fix_version; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#113
  def fetch_lowest_security_fix_version_for_git_dependency; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#169
  def filter_lower_tags(tags_array); end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#249
  def find_container_branch(sha); end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#130
  def find_lowest_secure_version(tags); end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#222
  def git_commit_checker; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#226
  def git_commit_checker_for(source); end

  # @return [Boolean]
  #
  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#218
  def git_dependency?; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#137
  def latest_commit_for_pinned_ref; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#203
  def latest_commit_sha; end

  # @return [Boolean]
  #
  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#66
  def latest_version_resolvable_with_full_unlock?; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#161
  def latest_version_tag; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#117
  def lowest_security_fix_version_tag; end

  # @return [Boolean]
  #
  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#239
  def shortened_semver_eq?(base, other); end

  # @raise [NotImplementedError]
  #
  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#71
  def updated_dependencies_after_full_unlock; end

  # source://dependabot-github_actions//lib/dependabot/github_actions/update_checker.rb#176
  def updated_ref(source); end
end

# source://dependabot-github_actions//lib/dependabot/github_actions/version.rb#9
class Dependabot::GithubActions::Version < ::Dependabot::Version
  # @return [Version] a new instance of Version
  #
  # source://dependabot-github_actions//lib/dependabot/github_actions/version.rb#10
  def initialize(version); end

  class << self
    # @return [Boolean]
    #
    # source://dependabot-github_actions//lib/dependabot/github_actions/version.rb#21
    def correct?(version); end

    # source://dependabot-github_actions//lib/dependabot/github_actions/version.rb#15
    def remove_leading_v(version); end
  end
end
