# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `dependabot-gradle` gem.
# Please instead update this file by running `bin/tapioca gem dependabot-gradle`.

# Java versions use dots and dashes when tokenising their versions.
# Gem::Version converts a "-" to ".pre.", so we override the `to_s` method.
#
# See https://maven.apache.org/pom.html#Version_Order_Specification for details.
#
# source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#7
module Dependabot
  class << self
    # source://dependabot-common/0.234.0/lib/dependabot/logger.rb#7
    def logger; end

    # source://dependabot-common/0.234.0/lib/dependabot/logger.rb#11
    def logger=(logger); end
  end
end

# source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#8
module Dependabot::Gradle; end

# source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#9
class Dependabot::Gradle::FileFetcher < ::Dependabot::FileFetchers::Base
  private

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#41
  def all_buildfiles_in_build(root_dir); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#136
  def buildfile(dir); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#159
  def cached_files; end

  # @raise [Dependabot::DependencyFileNotFound]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#121
  def check_required_files_present(files); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#67
  def clean_join(*parts); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#98
  def dependency_script_plugins(root_dir); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#35
  def fetch_files; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#163
  def fetch_first_if_present(paths); end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#129
  def file_exists_in_submodule?(path); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#150
  def find_first(dir, supported_names); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#142
  def gradle_toml_file(dir); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#49
  def included_builds(root_dir); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#146
  def settings_file(dir); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#71
  def subproject_buildfiles(root_dir); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#91
  def version_catalog_file(root_dir); end

  class << self
    # @return [Boolean]
    #
    # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#23
    def required_files_in?(filenames); end

    # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#29
    def required_files_message; end
  end
end

# source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#13
Dependabot::Gradle::FileFetcher::SUPPORTED_BUILD_FILE_NAMES = T.let(T.unsafe(nil), Array)

# source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#16
Dependabot::Gradle::FileFetcher::SUPPORTED_SETTINGS_FILE_NAMES = T.let(T.unsafe(nil), Array)

# For now Gradle only supports libray .toml files in the main gradle folder
#
# source://dependabot-gradle//lib/dependabot/gradle/file_fetcher.rb#20
Dependabot::Gradle::FileFetcher::SUPPORTED_VERSION_CATALOG_FILE_PATH = T.let(T.unsafe(nil), Array)

# source://dependabot-gradle//lib/dependabot/gradle/file_fetcher/settings_file_parser.rb#9
class Dependabot::Gradle::FileFetcher::SettingsFileParser
  # @return [SettingsFileParser] a new instance of SettingsFileParser
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher/settings_file_parser.rb#10
  def initialize(settings_file:); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher/settings_file_parser.rb#14
  def included_build_paths; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher/settings_file_parser.rb#23
  def subproject_paths; end

  private

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher/settings_file_parser.rb#51
  def comment_free_content; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher/settings_file_parser.rb#57
  def function_regex(function_name); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher/settings_file_parser.rb#64
  def project_dir_regex(proj); end

  # Returns the value of attribute settings_file.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_fetcher/settings_file_parser.rb#49
  def settings_file; end
end

# source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#20
class Dependabot::Gradle::FileParser < ::Dependabot::FileParsers::Base
  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#42
  def parse; end

  private

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#251
  def argument_from_string(string, arg_name); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#136
  def buildfile_dependencies(buildfile); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#378
  def buildfiles; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#398
  def check_required_files; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#366
  def closing_bracket_index(string); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#89
  def dependencies_for_declarations(declarations, toml_file, details_getter); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#258
  def dependency_from(details_hash:, buildfile:, in_dependency_set: T.unsafe(nil)); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#309
  def dependency_metadata(details_hash, in_dependency_set); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#182
  def dependency_set_dependencies(buildfile); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#110
  def details_for_library_dependency(declaration); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#120
  def details_for_plugin_dependency(declaration); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#328
  def evaluated_value(value, buildfile); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#247
  def extra_groups(line); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#243
  def format_plugin_version(version); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#164
  def keyword_arg_buildfile_dependencies(buildfile); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#132
  def map_value_regex(key); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#402
  def original_file; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#126
  def parsed_toml_file(file); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#215
  def plugin_dependencies(buildfile); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#348
  def prepared_content(buildfile); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#343
  def property_value_finder; end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#408
  def quoted?(string); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#390
  def script_plugin_files; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#147
  def shortform_buildfile_dependencies(buildfile); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#296
  def source_from(group, name, version); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#412
  def unquote(string); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#73
  def version_catalog_dependencies(toml_file); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#384
  def version_catalog_file; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#81
  def version_catalog_library_dependencies(parsed_toml_file, toml_file); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#85
  def version_catalog_plugin_dependencies(parsed_toml_file, toml_file); end

  class << self
    # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#58
    def find_include_names(buildfile); end

    # source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#66
    def find_includes(buildfile, dependency_files); end
  end
end

# source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#35
Dependabot::Gradle::FileParser::DEPENDENCY_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#37
Dependabot::Gradle::FileParser::DEPENDENCY_SET_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#38
Dependabot::Gradle::FileParser::DEPENDENCY_SET_ENTRY_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#33
Dependabot::Gradle::FileParser::PART = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#39
Dependabot::Gradle::FileParser::PLUGIN_BLOCK_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#40
Dependabot::Gradle::FileParser::PLUGIN_ID_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#26
Dependabot::Gradle::FileParser::PROPERTY_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#9
class Dependabot::Gradle::FileParser::PropertyValueFinder
  # @return [PropertyValueFinder] a new instance of PropertyValueFinder
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#67
  def initialize(dependency_files:); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#71
  def property_details(property_name:, callsite_buildfile:); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#98
  def property_value(property_name:, callsite_buildfile:); end

  private

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#107
  def dependency_files; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#147
  def fetch_kotlin_block_property_declarations(buildfile); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#177
  def fetch_multi_property_declarations(buildfile); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#127
  def fetch_single_property_declarations(buildfile); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#201
  def prepared_content(buildfile); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#109
  def properties(buildfile); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#208
  def top_level_buildfile; end
end

# project.findProperty('property') ?:
#
# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#16
Dependabot::Gradle::FileParser::PropertyValueFinder::FIND_PROPERTY_REGEX = T.let(T.unsafe(nil), Regexp)

# project.hasProperty('property') ? project.getProperty('property') :
#
# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#19
Dependabot::Gradle::FileParser::PropertyValueFinder::GROOVY_HAS_PROPERTY_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#49
Dependabot::Gradle::FileParser::PropertyValueFinder::GROOVY_MULTI_PROPERTY_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#26
Dependabot::Gradle::FileParser::PropertyValueFinder::GROOVY_PROPERTY_DECLARATION_AS_DEFAULTS_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#35
Dependabot::Gradle::FileParser::PropertyValueFinder::GROOVY_SINGLE_PROPERTY_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#51
Dependabot::Gradle::FileParser::PropertyValueFinder::KOTLIN_BLOCK_PROPERTY_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# if(project.hasProperty("property")) project.getProperty("property") else
#
# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#23
Dependabot::Gradle::FileParser::PropertyValueFinder::KOTLIN_HAS_PROPERTY_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#59
Dependabot::Gradle::FileParser::PropertyValueFinder::KOTLIN_MAP_NAMESPACED_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#53
Dependabot::Gradle::FileParser::PropertyValueFinder::KOTLIN_MULTI_PROPERTY_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#28
Dependabot::Gradle::FileParser::PropertyValueFinder::KOTLIN_PROPERTY_DECLARATION_AS_DEFAULTS_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#43
Dependabot::Gradle::FileParser::PropertyValueFinder::KOTLIN_SINGLE_PROPERTY_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#37
Dependabot::Gradle::FileParser::PropertyValueFinder::KOTLIN_SINGLE_PROPERTY_INDEX_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#41
Dependabot::Gradle::FileParser::PropertyValueFinder::KOTLIN_SINGLE_PROPERTY_SET_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#39
Dependabot::Gradle::FileParser::PropertyValueFinder::KOTLIN_SINGLE_PROPERTY_SET_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#56
Dependabot::Gradle::FileParser::PropertyValueFinder::MULTI_PROPERTY_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#63
Dependabot::Gradle::FileParser::PropertyValueFinder::NAMESPACED_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#30
Dependabot::Gradle::FileParser::PropertyValueFinder::PROPERTY_DECLARATION_AS_DEFAULTS_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#13
Dependabot::Gradle::FileParser::PropertyValueFinder::QUOTED_VALUE_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#61
Dependabot::Gradle::FileParser::PropertyValueFinder::REGULAR_NAMESPACED_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#46
Dependabot::Gradle::FileParser::PropertyValueFinder::SINGLE_PROPERTY_DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#11
Dependabot::Gradle::FileParser::PropertyValueFinder::SUPPORTED_BUILD_FILE_NAMES = T.let(T.unsafe(nil), Array)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/property_value_finder.rb#33
Dependabot::Gradle::FileParser::PropertyValueFinder::VALUE_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#9
class Dependabot::Gradle::FileParser::RepositoriesFinder
  # @return [RepositoriesFinder] a new instance of RepositoriesFinder
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#27
  def initialize(dependency_files:, target_dependency_file:); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#33
  def repository_urls; end

  private

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#118
  def closing_bracket_index(string); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#140
  def comment_free_content(buildfile); end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#49
  def dependency_files; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#51
  def inherited_repository_urls(dependency_file); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#74
  def own_buildfile_repository_urls; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#88
  def repository_urls_from(buildfile_content); end

  # Returns the value of attribute target_dependency_file.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#49
  def target_dependency_file; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#146
  def top_level_buildfile; end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#130
  def valid_url?(url); end
end

# The Central Repo doesn't have special status for Gradle, but until
# we're confident we're selecting repos correctly it's wise to include
# it as a default.
#
# source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#15
Dependabot::Gradle::FileParser::RepositoriesFinder::CENTRAL_REPO_URL = T.let(T.unsafe(nil), String)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#16
Dependabot::Gradle::FileParser::RepositoriesFinder::GOOGLE_MAVEN_REPO = T.let(T.unsafe(nil), String)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#17
Dependabot::Gradle::FileParser::RepositoriesFinder::GRADLE_PLUGINS_REPO = T.let(T.unsafe(nil), String)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#21
Dependabot::Gradle::FileParser::RepositoriesFinder::GROOVY_MAVEN_REPO_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#23
Dependabot::Gradle::FileParser::RepositoriesFinder::KOTLIN_MAVEN_REPO_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#25
Dependabot::Gradle::FileParser::RepositoriesFinder::MAVEN_REPO_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#19
Dependabot::Gradle::FileParser::RepositoriesFinder::REPOSITORIES_BLOCK_START = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser/repositories_finder.rb#10
Dependabot::Gradle::FileParser::RepositoriesFinder::SUPPORTED_BUILD_FILE_NAMES = T.let(T.unsafe(nil), Array)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#24
Dependabot::Gradle::FileParser::SUPPORTED_BUILD_FILE_NAMES = T.let(T.unsafe(nil), Array)

# source://dependabot-gradle//lib/dependabot/gradle/file_parser.rb#34
Dependabot::Gradle::FileParser::VSN_PART = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#10
class Dependabot::Gradle::FileUpdater < ::Dependabot::FileUpdaters::Base
  # source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#20
  def updated_dependency_files; end

  private

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#190
  def buildfiles; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#43
  def check_required_files; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#158
  def evaluate_properties(string, buildfile); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#135
  def original_buildfile_declarations(dependency, requirement); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#47
  def original_file; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#175
  def property_value_finder; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#53
  def update_buildfiles_for_dependency(buildfiles:, dependency:); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#100
  def update_files_for_dep_set_change(buildfiles, old_req, new_req); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#86
  def update_files_for_property_change(buildfiles, old_req, new_req); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#114
  def update_version_in_buildfile(dependency, buildfile, previous_req, requirement); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#181
  def updated_buildfile_declaration(original_buildfile_declaration, previous_req, requirement); end

  class << self
    # source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#16
    def updated_files_regex; end
  end
end

# source://dependabot-gradle//lib/dependabot/gradle/file_updater/dependency_set_updater.rb#10
class Dependabot::Gradle::FileUpdater::DependencySetUpdater
  # @return [DependencySetUpdater] a new instance of DependencySetUpdater
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_updater/dependency_set_updater.rb#11
  def initialize(dependency_files:); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater/dependency_set_updater.rb#15
  def update_files_for_dep_set_change(dependency_set:, buildfile:, previous_requirement:, updated_requirement:); end

  private

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_updater/dependency_set_updater.rb#41
  def dependency_files; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater/dependency_set_updater.rb#43
  def original_declaration_string(dependency_set, buildfile); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater/dependency_set_updater.rb#57
  def update_file(file:, content:); end
end

# source://dependabot-gradle//lib/dependabot/gradle/file_updater/property_value_updater.rb#10
class Dependabot::Gradle::FileUpdater::PropertyValueUpdater
  # @return [PropertyValueUpdater] a new instance of PropertyValueUpdater
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_updater/property_value_updater.rb#11
  def initialize(dependency_files:); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater/property_value_updater.rb#15
  def update_files_for_property_change(property_name:, callsite_buildfile:, previous_value:, updated_value:); end

  private

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/file_updater/property_value_updater.rb#44
  def dependency_files; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater/property_value_updater.rb#58
  def previous_value_regex(previous_value); end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater/property_value_updater.rb#46
  def property_value_finder; end

  # source://dependabot-gradle//lib/dependabot/gradle/file_updater/property_value_updater.rb#52
  def update_file(file:, content:); end
end

# source://dependabot-gradle//lib/dependabot/gradle/file_updater.rb#14
Dependabot::Gradle::FileUpdater::SUPPORTED_BUILD_FILE_NAMES = T.let(T.unsafe(nil), Array)

# source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#14
class Dependabot::Gradle::MetadataFinder < ::Dependabot::MetadataFinders::Base
  private

  # source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#173
  def auth_headers; end

  # source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#105
  def dependency_pom_file; end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#169
  def kotlin_plugin?; end

  # source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#21
  def look_up_source; end

  # source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#55
  def look_up_source_in_pom(pom); end

  # source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#152
  def maven_repo_dependency_url; end

  # source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#143
  def maven_repo_url; end

  # source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#125
  def parent_pom_file(pom); end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#165
  def plugin?; end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#36
  def repo_has_subdir_for_dep?(tmp_source); end

  # source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#93
  def source_from_anywhere_in_pom(pom); end

  # source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#69
  def substitute_property_in_source_url(source_url, pom); end
end

# source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#15
Dependabot::Gradle::MetadataFinder::DOT_SEPARATOR_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#17
Dependabot::Gradle::MetadataFinder::KOTLIN_PLUGIN_REPO_PREFIX = T.let(T.unsafe(nil), String)

# source://dependabot-gradle//lib/dependabot/gradle/metadata_finder.rb#16
Dependabot::Gradle::MetadataFinder::PROPERTY_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/requirement.rb#10
class Dependabot::Gradle::Requirement < ::Gem::Requirement
  # @return [Requirement] a new instance of Requirement
  #
  # source://dependabot-gradle//lib/dependabot/gradle/requirement.rb#34
  def initialize(*requirements); end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/requirement.rb#42
  def satisfied_by?(version); end

  private

  # source://dependabot-gradle//lib/dependabot/gradle/requirement.rb#61
  def convert_java_constraint_to_ruby_constraint(req_string); end

  # source://dependabot-gradle//lib/dependabot/gradle/requirement.rb#98
  def convert_java_equals_req_to_ruby(req_string); end

  # source://dependabot-gradle//lib/dependabot/gradle/requirement.rb#78
  def convert_java_range_to_ruby_range(req_string); end

  # source://dependabot-gradle//lib/dependabot/gradle/requirement.rb#107
  def convert_wildcard_req(req_string); end

  class << self
    # source://dependabot-gradle//lib/dependabot/gradle/requirement.rb#15
    def parse(obj); end

    # source://dependabot-gradle//lib/dependabot/gradle/requirement.rb#28
    def requirements_array(requirement_string); end

    private

    # source://dependabot-gradle//lib/dependabot/gradle/requirement.rb#49
    def split_java_requirement(req_string); end
  end
end

# source://dependabot-gradle//lib/dependabot/gradle/requirement.rb#13
Dependabot::Gradle::Requirement::PATTERN = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/requirement.rb#12
Dependabot::Gradle::Requirement::PATTERN_RAW = T.let(T.unsafe(nil), String)

# source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#10
class Dependabot::Gradle::UpdateChecker < ::Dependabot::UpdateCheckers::Base
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#21
  def latest_resolvable_version; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#46
  def latest_resolvable_version_with_no_unlock; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#15
  def latest_version; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#38
  def lowest_resolvable_security_fix_version; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#34
  def lowest_security_fix_version; end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#70
  def requirements_unlocked_or_can_be?; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#57
  def updated_requirements; end

  private

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#180
  def all_property_based_dependencies; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#174
  def declarations_using_a_property; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#146
  def git_commit_checker; end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#142
  def git_dependency?; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#109
  def latest_version_details; end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#78
  def latest_version_resolvable_with_full_unlock?; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#113
  def lowest_security_fix_version_details; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#130
  def multi_dependency_updater; end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#97
  def numeric_version_can_update?(requirements_to_unlock:); end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#91
  def numeric_version_up_to_date?; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#103
  def preferred_version_details; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#87
  def updated_dependencies_after_full_unlock; end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#168
  def version_comes_from_dependency_set?; end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#154
  def version_comes_from_multi_dependency_property?; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker.rb#118
  def version_finder; end
end

# source://dependabot-gradle//lib/dependabot/gradle/update_checker/multi_dependency_updater.rb#10
class Dependabot::Gradle::UpdateChecker::MultiDependencyUpdater
  # @return [MultiDependencyUpdater] a new instance of MultiDependencyUpdater
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/multi_dependency_updater.rb#14
  def initialize(dependency:, dependency_files:, credentials:, target_version_details:, ignored_versions:, raise_on_ignored: T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/multi_dependency_updater.rb#26
  def update_possible?; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/multi_dependency_updater.rb#44
  def updated_dependencies; end

  private

  # Returns the value of attribute credentials.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/multi_dependency_updater.rb#62
  def credentials; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/multi_dependency_updater.rb#65
  def dependencies_to_update; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/multi_dependency_updater.rb#62
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/multi_dependency_updater.rb#62
  def dependency_files; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/multi_dependency_updater.rb#87
  def dependency_set; end

  # Returns the value of attribute ignored_versions.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/multi_dependency_updater.rb#62
  def ignored_versions; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/multi_dependency_updater.rb#81
  def property_name; end

  # Returns the value of attribute source_url.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/multi_dependency_updater.rb#62
  def source_url; end

  # Returns the value of attribute target_version.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/multi_dependency_updater.rb#62
  def target_version; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/multi_dependency_updater.rb#93
  def updated_requirements(dep); end
end

# source://dependabot-gradle//lib/dependabot/gradle/update_checker/requirements_updater.rb#16
class Dependabot::Gradle::UpdateChecker::RequirementsUpdater
  # @return [RequirementsUpdater] a new instance of RequirementsUpdater
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/requirements_updater.rb#17
  def initialize(requirements:, latest_version:, source_url:, properties_to_update:); end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/requirements_updater.rb#27
  def updated_requirements; end

  private

  # Returns the value of attribute latest_version.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/requirements_updater.rb#47
  def latest_version; end

  # Returns the value of attribute properties_to_update.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/requirements_updater.rb#47
  def properties_to_update; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/requirements_updater.rb#84
  def requirement_class; end

  # Returns the value of attribute requirements.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/requirements_updater.rb#47
  def requirements; end

  # Returns the value of attribute source_url.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/requirements_updater.rb#47
  def source_url; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/requirements_updater.rb#65
  def update_dynamic_requirement(req_string); end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/requirements_updater.rb#59
  def update_exact_requirement(req_string); end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/requirements_updater.rb#50
  def update_requirement(req_string); end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/requirements_updater.rb#88
  def updated_source; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/requirements_updater.rb#80
  def version_class; end
end

# source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#16
class Dependabot::Gradle::UpdateChecker::VersionFinder
  # @return [VersionFinder] a new instance of VersionFinder
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#20
  def initialize(dependency:, dependency_files:, credentials:, ignored_versions:, security_advisories:, raise_on_ignored: T.unsafe(nil)); end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#32
  def latest_version_details; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#43
  def lowest_security_fix_version_details; end

  # @raise [PrivateSourceAuthenticationFailure]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#57
  def versions; end

  private

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#319
  def auth_headers(maven_repo_url); end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#315
  def auth_headers_finder; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#303
  def central_repo_urls; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#186
  def check_response(response, repository_url); end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#76
  def credentials; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#214
  def credentials_repository_details; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#76
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#76
  def dependency_files; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#162
  def dependency_metadata(repository_details); end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#275
  def dependency_metadata_url(repository_url); end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#225
  def dependency_repository_details; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#85
  def filter_date_based_versions(possible_versions); end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#97
  def filter_ignored_versions(possible_versions); end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#115
  def filter_lower_versions(possible_versions); end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#79
  def filter_prereleases(possible_versions); end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#92
  def filter_version_types(possible_versions); end

  # Returns the value of attribute forbidden_urls.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#76
  def forbidden_urls; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#135
  def google_version_details; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#285
  def group_and_artifact_ids; end

  # Returns the value of attribute ignored_versions.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#76
  def ignored_versions; end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#299
  def kotlin_plugin?; end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#250
  def matches_dependency_version_type?(comparison_version); end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#295
  def plugin?; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#243
  def plugin_repository_details; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#270
  def pom; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#194
  def repositories; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#182
  def repository_urls; end

  # Returns the value of attribute security_advisories.
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#76
  def security_advisories; end

  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#311
  def version_class; end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#129
  def wants_date_based_version?; end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#123
  def wants_prerelease?; end
end

# source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#17
Dependabot::Gradle::UpdateChecker::VersionFinder::KOTLIN_PLUGIN_REPO_PREFIX = T.let(T.unsafe(nil), String)

# source://dependabot-gradle//lib/dependabot/gradle/update_checker/version_finder.rb#18
Dependabot::Gradle::UpdateChecker::VersionFinder::TYPE_SUFFICES = T.let(T.unsafe(nil), Array)

# source://dependabot-gradle//lib/dependabot/gradle/version.rb#14
class Dependabot::Gradle::Version < ::Dependabot::Version
  # @return [Version] a new instance of Version
  #
  # source://dependabot-gradle//lib/dependabot/gradle/version.rb#42
  def initialize(version); end

  # source://dependabot-gradle//lib/dependabot/gradle/version.rb#60
  def <=>(other); end

  # @return [Boolean]
  #
  # source://dependabot-gradle//lib/dependabot/gradle/version.rb#51
  def prerelease?; end

  # source://dependabot-gradle//lib/dependabot/gradle/version.rb#47
  def to_s; end

  private

  # source://dependabot-gradle//lib/dependabot/gradle/version.rb#156
  def compare_prefixed_token(prefix:, token:, other_prefix:, other_token:); end

  # source://dependabot-gradle//lib/dependabot/gradle/version.rb#174
  def compare_token(token:, other_token:); end

  # source://dependabot-gradle//lib/dependabot/gradle/version.rb#128
  def convert_dates(version, other_version); end

  # source://dependabot-gradle//lib/dependabot/gradle/version.rb#109
  def fill_tokens(version); end

  # source://dependabot-gradle//lib/dependabot/gradle/version.rb#140
  def pad_for_comparison(prefixed_tokens, other_prefixed_tokens); end

  # source://dependabot-gradle//lib/dependabot/gradle/version.rb#136
  def split_into_prefixed_tokens(version); end

  # source://dependabot-gradle//lib/dependabot/gradle/version.rb#102
  def stringify_version(version); end

  # source://dependabot-gradle//lib/dependabot/gradle/version.rb#92
  def tokens; end

  # source://dependabot-gradle//lib/dependabot/gradle/version.rb#120
  def trim_version(version); end

  class << self
    # @return [Boolean]
    #
    # source://dependabot-gradle//lib/dependabot/gradle/version.rb#36
    def correct?(version); end
  end
end

# source://dependabot-gradle//lib/dependabot/gradle/version.rb#34
Dependabot::Gradle::Version::ANCHORED_VERSION_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://dependabot-gradle//lib/dependabot/gradle/version.rb#21
Dependabot::Gradle::Version::NAMED_QUALIFIERS_HIERARCHY = T.let(T.unsafe(nil), Hash)

# source://dependabot-gradle//lib/dependabot/gradle/version.rb#15
Dependabot::Gradle::Version::NULL_VALUES = T.let(T.unsafe(nil), Array)

# source://dependabot-gradle//lib/dependabot/gradle/version.rb#16
Dependabot::Gradle::Version::PREFIXED_TOKEN_HIERARCHY = T.let(T.unsafe(nil), Hash)

# source://dependabot-gradle//lib/dependabot/gradle/version.rb#30
Dependabot::Gradle::Version::VERSION_PATTERN = T.let(T.unsafe(nil), String)
