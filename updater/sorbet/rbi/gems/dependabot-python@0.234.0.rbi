# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `dependabot-python` gem.
# Please instead update this file by running `bin/tapioca gem dependabot-python`.

# Python versions can include a local version identifier, which Ruby can't
# parse. This class augments Gem::Version with local version identifier info.
# See https://www.python.org/dev/peps/pep-0440 for details.
#
# source://dependabot-python//lib/dependabot/python/version.rb#11
module Dependabot
  class << self
    # source://dependabot-common/0.234.0/lib/dependabot/logger.rb#7
    def logger; end

    # source://dependabot-common/0.234.0/lib/dependabot/logger.rb#11
    def logger=(logger); end
  end
end

# source://dependabot-python//lib/dependabot/python/version.rb#12
module Dependabot::Python; end

# source://dependabot-python//lib/dependabot/python/authed_url_builder.rb#6
class Dependabot::Python::AuthedUrlBuilder
  class << self
    # source://dependabot-python//lib/dependabot/python/authed_url_builder.rb#7
    def authed_url(credential:); end
  end
end

# source://dependabot-python//lib/dependabot/python/file_fetcher.rb#16
class Dependabot::Python::FileFetcher < ::Dependabot::FileFetchers::Base
  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#43
  def ecosystem_versions; end

  private

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#355
  def cfg_files_for_setup_py(path); end

  # @raise [Dependabot::DependencyFileNotFound]
  #
  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#108
  def check_required_files_present; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#250
  def child_requirement_files; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#246
  def child_requirement_in_files; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#242
  def child_requirement_txt_files; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#286
  def constraints_files; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#266
  def fetch_child_requirement_files(file:, previously_fetched_files:); end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#67
  def fetch_files; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#324
  def fetch_path_setup_file(path, allow_pyproject: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#399
  def parse_path_setup_paths(req_file); end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#193
  def parsed_pipfile; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#201
  def parsed_pyproject; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#381
  def path_setup_file_paths; end

  # @raise [Dependabot::PathDependenciesNotReachable]
  #
  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#303
  def path_setup_files; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#178
  def pdm_lock; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#133
  def pip_conf; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#92
  def pipenv_files; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#154
  def pipfile; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#160
  def pipfile_lock; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#417
  def pipfile_path_setup_file_paths; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#172
  def poetry_lock; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#434
  def poetry_path_setup_file_paths; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#166
  def pyproject; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#96
  def pyproject_files; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#139
  def python_version_file; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#229
  def req_files_for_dir(requirements_dir); end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#209
  def req_txt_and_in_files; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#100
  def requirement_files; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#393
  def requirement_in_path_setup_file_paths; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#387
  def requirement_txt_path_setup_file_paths; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#369
  def requirements_file?(file); end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#188
  def requirements_in_files; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#184
  def requirements_txt_files; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#127
  def setup_cfg_file; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#121
  def setup_file; end

  # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#86
  def uniq_files(fetched_files); end

  class << self
    # @return [Boolean]
    #
    # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#21
    def required_files_in?(filenames); end

    # source://dependabot-python//lib/dependabot/python/file_fetcher.rb#38
    def required_files_message; end
  end
end

# source://dependabot-python//lib/dependabot/python/file_fetcher.rb#17
Dependabot::Python::FileFetcher::CHILD_REQUIREMENT_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/file_fetcher.rb#18
Dependabot::Python::FileFetcher::CONSTRAINT_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/file_fetcher.rb#19
Dependabot::Python::FileFetcher::DEPENDENCY_TYPES = T.let(T.unsafe(nil), Array)

# source://dependabot-python//lib/dependabot/python/file_parser.rb#16
class Dependabot::Python::FileParser < ::Dependabot::FileParsers::Base
  # @raise [Dependabot::UnexpectedExternalCode]
  #
  # source://dependabot-python//lib/dependabot/python/file_parser.rb#36
  def parse; end

  private

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_parser.rb#106
  def blocking_marker?(dep); end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#185
  def check_required_files; end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#152
  def check_requirements(requirements); end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#99
  def group_from_filename(filename); end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_parser.rb#121
  def lockfile_for_pip_compile_file?(filename); end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#181
  def normalised_name(name, extras = T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#204
  def output_file_regex(filename); end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#132
  def parsed_requirement_files; end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#224
  def pip_compile_files; end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#56
  def pipenv_dependencies; end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#196
  def pipfile; end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#200
  def pipfile_lock; end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#212
  def poetry_lock; end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#208
  def pyproject; end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#63
  def pyproject_file_dependencies; end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#172
  def remove_imports(file); end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#70
  def requirement_dependencies; end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#52
  def requirement_files; end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#220
  def setup_cfg_file; end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#216
  def setup_file; end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#114
  def setup_file_dependencies; end

  # source://dependabot-python//lib/dependabot/python/file_parser.rb#162
  def write_temporary_dependency_files; end
end

# source://dependabot-python//lib/dependabot/python/file_parser.rb#21
Dependabot::Python::FileParser::DEPENDENCY_GROUP_KEYS = T.let(T.unsafe(nil), Array)

# source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#15
class Dependabot::Python::FileParser::PipfileFilesParser
  # @return [PipfileFilesParser] a new instance of PipfileFilesParser
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#27
  def initialize(dependency_files:); end

  # source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#31
  def dependency_set; end

  private

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#42
  def dependency_files; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#110
  def dependency_version(dep_name, requirement, group); end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#137
  def git_or_path_requirement?(req); end

  # source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#143
  def normalised_name(name); end

  # source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#147
  def parsed_pipfile; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#153
  def parsed_pipfile_lock; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#159
  def pipfile; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#44
  def pipfile_dependencies; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#163
  def pipfile_lock; end

  # Create a DependencySet where each element has no requirement. Any
  # requirements will be added when combining the DependencySet with
  # other DependencySets.
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#81
  def pipfile_lock_dependencies; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#131
  def specifies_version?(req); end

  # source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#124
  def version_from_hash_or_string(obj); end
end

# source://dependabot-python//lib/dependabot/python/file_parser/pipfile_files_parser.rb#16
Dependabot::Python::FileParser::PipfileFilesParser::DEPENDENCY_GROUP_KEYS = T.let(T.unsafe(nil), Array)

# source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#16
class Dependabot::Python::FileParser::PyprojectFilesParser
  # @return [PyprojectFilesParser] a new instance of PyprojectFilesParser
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#22
  def initialize(dependency_files:); end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#26
  def dependency_set; end

  private

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#213
  def check_requirements(req); end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#37
  def dependency_files; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#241
  def lockfile; end

  # Create a DependencySet where each element has no requirement. Any
  # requirements will be added when combining the DependencySet with
  # other DependencySets.
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#155
  def lockfile_dependencies; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#220
  def normalise(name); end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#119
  def normalised_name(name, extras); end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#51
  def parse_poetry_dependencies; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#100
  def parse_poetry_dependency_group(type, deps_hash); end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#183
  def parse_production_dependency_names; end

  # @param req can be an Array, Hash or String that represents the constraints for a dependency
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#124
  def parse_requirements_from(req, type); end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#263
  def parsed_lockfile; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#245
  def parsed_pep621_dependencies; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#230
  def parsed_poetry_lock; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#224
  def parsed_pyproject; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#272
  def pdm_lock; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#66
  def pep621_dependencies; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#47
  def poetry_dependencies; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#267
  def poetry_lock; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#179
  def production_dependency_names; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#236
  def pyproject; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#39
  def pyproject_dependencies; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#148
  def using_pdm?; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#143
  def using_pep621?; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#139
  def using_poetry?; end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#205
  def version_from_lockfile(dep_name); end

  # source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#257
  def write_temporary_pyproject; end
end

# source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#17
Dependabot::Python::FileParser::PyprojectFilesParser::POETRY_DEPENDENCY_TYPES = T.let(T.unsafe(nil), Array)

# https://python-poetry.org/docs/dependency-specification/
#
# source://dependabot-python//lib/dependabot/python/file_parser/pyproject_files_parser.rb#20
Dependabot::Python::FileParser::PyprojectFilesParser::UNSUPPORTED_DEPENDENCY_TYPES = T.let(T.unsafe(nil), Array)

# source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#14
class Dependabot::Python::FileParser::PythonRequirementParser
  # @return [PythonRequirementParser] a new instance of PythonRequirementParser
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#17
  def initialize(dependency_files:); end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#15
  def dependency_files; end

  # TODO: Add better Python version detection using dependency versions
  # (e.g., Django 2.x implies Python 3)
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#33
  def imputed_requirements; end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#21
  def user_specified_requirements; end

  private

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#120
  def pipfile; end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#124
  def pipfile_lock; end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#45
  def pipfile_python_requirement; end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#101
  def pyenv_versions; end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#128
  def pyproject; end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#57
  def pyproject_python_requirement; end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#136
  def python_version_file; end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#67
  def python_version_file_version; end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#109
  def requirement_class; end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#144
  def requirement_files; end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#105
  def run_command(command, env: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#140
  def runtime_file; end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#77
  def runtime_file_python_version; end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#132
  def setup_file; end

  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#88
  def setup_file_requirement; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/python_requirement_parser.rb#113
  def valid_requirement?(req_string); end
end

# source://dependabot-python//lib/dependabot/python/file_parser.rb#31
Dependabot::Python::FileParser::REQUIREMENT_FILE_EVALUATION_ERRORS = T.let(T.unsafe(nil), Array)

# source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#15
class Dependabot::Python::FileParser::SetupFileParser
  # @return [SetupFileParser] a new instance of SetupFileParser
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#23
  def initialize(dependency_files:); end

  # source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#27
  def dependency_set; end

  private

  # source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#101
  def check_requirements(requirements); end

  # source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#156
  def closing_bracket_index(string, bracket); end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#57
  def dependency_files; end

  # source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#144
  def get_regexed_req_array(regex); end

  # source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#150
  def get_regexed_req_dict(regex); end

  # source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#168
  def normalised_name(name, extras); end

  # source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#80
  def parsed_sanitized_setup_file; end

  # source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#59
  def parsed_setup_file; end

  # source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#172
  def setup_file; end

  # Write a setup.py with only entries for the requires fields.
  #
  # This sanitization is far from perfect (it will fail if any of the
  # entries are dynamic), but it is an alternative approach to the one
  # used in parser.py which sometimes succeeds when that has failed.
  #
  # source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#126
  def write_sanitized_setup_file; end

  # source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#111
  def write_temporary_dependency_files; end
end

# source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#21
Dependabot::Python::FileParser::SetupFileParser::CLOSING_BRACKET = T.let(T.unsafe(nil), Hash)

# source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#19
Dependabot::Python::FileParser::SetupFileParser::EXTRAS_REQUIRE_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#16
Dependabot::Python::FileParser::SetupFileParser::INSTALL_REQUIRES_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#17
Dependabot::Python::FileParser::SetupFileParser::SETUP_REQUIRES_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/file_parser/setup_file_parser.rb#18
Dependabot::Python::FileParser::SetupFileParser::TESTS_REQUIRE_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/file_updater.rb#11
class Dependabot::Python::FileUpdater < ::Dependabot::FileUpdaters::Base
  # source://dependabot-python//lib/dependabot/python/file_updater.rb#30
  def updated_dependency_files; end

  private

  # source://dependabot-python//lib/dependabot/python/file_updater.rb#119
  def check_required_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater.rb#152
  def pip_compile_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater.rb#136
  def pipfile; end

  # source://dependabot-python//lib/dependabot/python/file_updater.rb#140
  def pipfile_lock; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_updater.rb#130
  def poetry_based?; end

  # source://dependabot-python//lib/dependabot/python/file_updater.rb#148
  def poetry_lock; end

  # source://dependabot-python//lib/dependabot/python/file_updater.rb#144
  def pyproject; end

  # source://dependabot-python//lib/dependabot/python/file_updater.rb#51
  def resolver_type; end

  # source://dependabot-python//lib/dependabot/python/file_updater.rb#79
  def subdependency_resolver; end

  # source://dependabot-python//lib/dependabot/python/file_updater.rb#103
  def updated_pip_compile_based_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater.rb#87
  def updated_pipfile_based_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater.rb#95
  def updated_poetry_based_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater.rb#111
  def updated_requirement_based_files; end

  class << self
    # source://dependabot-python//lib/dependabot/python/file_updater.rb#17
    def updated_files_regex; end
  end
end

# source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#20
class Dependabot::Python::FileUpdater::PipCompileFileUpdater
  # @return [PipCompileFileUpdater] a new instance of PipCompileFileUpdater
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#33
  def initialize(dependencies:, dependency_files:, credentials:); end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#31
  def credentials; end

  # Returns the value of attribute dependencies.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#31
  def dependencies; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#31
  def dependency_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#39
  def updated_dependency_files; end

  private

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#64
  def compile_new_requirement_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#475
  def compiled_file_for_filename(filename); end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#491
  def compiled_file_includes_dependency?(compiled_file); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#563
  def compiled_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#45
  def dependency; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#340
  def deps_to_augment_hashes_for(updated_content, original_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#50
  def fetch_updated_dependency_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#458
  def filenames_to_compile; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#233
  def freeze_dependency_requirement(file); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#377
  def hash_separator(requirement_string); end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#454
  def includes_unsafe_packages?(content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#548
  def language_version_manager; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#501
  def normalise(name); end

  # If the files we need to update require one another then we need to
  # update them in the right order
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#507
  def order_filenames_for_compilation(filenames); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#487
  def output_file_regex(filename); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#369
  def package_hashes_for(name:, version:, algorithm:); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#559
  def pip_compile_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#440
  def pip_compile_index_options; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#405
  def pip_compile_options(filename); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#395
  def pip_compile_options_fingerprint(options); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#416
  def pip_compile_options_from_compiled_file(requirements_file); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#268
  def post_process_compiled_file(updated_content, file); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#179
  def python_env; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#541
  def python_requirement_parser; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#306
  def remove_new_warnings(updated_content, original_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#285
  def replace_absolute_file_paths(updated_content, original_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#275
  def replace_header_with_original(updated_content, original_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#522
  def requirement_map; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#148
  def run_command(cmd, fingerprint:, env: T.unsafe(nil), allow_unsafe_shell_command: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#166
  def run_pip_compile_command(command, fingerprint:, allow_unsafe_shell_command: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#217
  def sanitized_setup_file_content(file); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#227
  def setup_cfg(file); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#567
  def setup_cfg_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#555
  def setup_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#250
  def update_dependency_requirement(file); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#319
  def update_hashes_if_required(updated_content, original_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#111
  def update_manifest_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#124
  def update_uncompiled_files(updated_files); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#194
  def write_updated_dependency_files; end
end

# source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#26
Dependabot::Python::FileUpdater::PipCompileFileUpdater::INCOMPATIBLE_VERSIONS_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#29
Dependabot::Python::FileUpdater::PipCompileFileUpdater::RESOLVER_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#28
Dependabot::Python::FileUpdater::PipCompileFileUpdater::UNSAFE_NOTE = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#25
Dependabot::Python::FileUpdater::PipCompileFileUpdater::UNSAFE_PACKAGES = T.let(T.unsafe(nil), Array)

# source://dependabot-python//lib/dependabot/python/file_updater/pip_compile_file_updater.rb#27
Dependabot::Python::FileUpdater::PipCompileFileUpdater::WARNINGS = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#18
class Dependabot::Python::FileUpdater::PipfileFileUpdater
  # @return [PipfileFileUpdater] a new instance of PipfileFileUpdater
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#27
  def initialize(dependencies:, dependency_files:, credentials:); end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#25
  def credentials; end

  # Returns the value of attribute dependencies.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#25
  def dependencies; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#25
  def dependency_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#33
  def updated_dependency_files; end

  private

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#187
  def add_private_sources(pipfile_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#39
  def dependency; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#44
  def fetch_updated_dependency_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#152
  def freeze_dependencies_being_updated(pipfile_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#139
  def freeze_other_dependencies(pipfile_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#236
  def generate_updated_requirements_files; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#76
  def generate_updated_requirements_files?; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#82
  def generated_requirements_files(type); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#287
  def install_required_python; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#342
  def language_version_manager; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#357
  def lockfile; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#331
  def normalise(name); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#349
  def parsed_lockfile; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#373
  def pipenv_env_variables; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#353
  def pipfile; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#314
  def pipfile_hash_for(pipfile_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#220
  def post_process_lockfile(updated_lockfile_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#130
  def prepared_pipfile_content; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#335
  def python_requirement_parser; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#369
  def requirements_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#248
  def run_command(command, env: T.unsafe(nil), fingerprint: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#252
  def run_pipenv_command(command, env: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#298
  def sanitized_setup_file_content(file); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#308
  def setup_cfg(file); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#365
  def setup_cfg_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#361
  def setup_files; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#175
  def subdep_type?(type); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#145
  def update_python_requirement(pipfile_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#126
  def updated_dev_req_content; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#325
  def updated_file(file:, content:); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#193
  def updated_generated_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#102
  def updated_generated_requirements_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#71
  def updated_lockfile_content; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#63
  def updated_pipfile_content; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#122
  def updated_req_content; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#261
  def write_temporary_dependency_files(pipfile_content); end
end

# source://dependabot-python//lib/dependabot/python/file_updater/pipfile_file_updater.rb#23
Dependabot::Python::FileUpdater::PipfileFileUpdater::DEPENDENCY_TYPES = T.let(T.unsafe(nil), Array)

# source://dependabot-python//lib/dependabot/python/file_updater/pipfile_manifest_updater.rb#9
class Dependabot::Python::FileUpdater::PipfileManifestUpdater
  # @return [PipfileManifestUpdater] a new instance of PipfileManifestUpdater
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_manifest_updater.rb#10
  def initialize(dependencies:, manifest:); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_manifest_updater.rb#15
  def updated_manifest_content; end

  private

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_manifest_updater.rb#84
  def declaration_regex(dep); end

  # Returns the value of attribute dependencies.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_manifest_updater.rb#34
  def dependencies; end

  # Returns the value of attribute manifest.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_manifest_updater.rb#34
  def manifest; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_manifest_updater.rb#97
  def requirement_changed?(dependency); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_manifest_updater.rb#89
  def table_declaration_version_regex(dep); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_manifest_updater.rb#62
  def update_manifest_req(content:, dep:, old_req:, new_req:); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_manifest_updater.rb#36
  def update_requirements(content:, dependency:); end
end

# source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#15
class Dependabot::Python::FileUpdater::PipfilePreparer
  # @return [PipfilePreparer] a new instance of PipfilePreparer
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#16
  def initialize(pipfile_content:, lockfile: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#50
  def freeze_dependency(dep_name, pipfile_object, keys); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#31
  def freeze_top_level_dependencies_except(dependencies); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#21
  def replace_sources(credentials); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#70
  def update_python_requirement(requirement); end

  private

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#132
  def config_variable_sources(credentials); end

  # Returns the value of attribute lockfile.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#85
  def lockfile; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#108
  def normalise(name); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#104
  def parsed_lockfile; end

  # Returns the value of attribute pipfile_content.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#85
  def pipfile_content; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#112
  def pipfile_sources; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#96
  def ref_from_lockfile(dep_type, dep_name); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#116
  def sub_auth_url(source, credentials); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pipfile_preparer.rb#87
  def version_from_lockfile(dep_type, dep_name); end
end

# source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#19
class Dependabot::Python::FileUpdater::PoetryFileUpdater
  # @return [PoetryFileUpdater] a new instance of PoetryFileUpdater
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#24
  def initialize(dependencies:, dependency_files:, credentials:); end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#22
  def credentials; end

  # Returns the value of attribute dependencies.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#22
  def dependencies; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#22
  def dependency_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#30
  def updated_dependency_files; end

  private

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#223
  def add_auth_env_vars; end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#165
  def create_declaration_at_new_version!(poetry_object, dep); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#243
  def declaration_regex(dep); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#36
  def dependency; end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#251
  def escape(dep); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#41
  def fetch_updated_dependency_files; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#255
  def file_changed?(file); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#130
  def freeze_dependencies_being_updated(pyproject_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#124
  def freeze_other_dependencies(pyproject_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#283
  def language_version_manager; end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#151
  def lock_declaration_to_new_version!(poetry_object, dep); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#295
  def lockfile; end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#272
  def normalise(name); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#303
  def poetry_lock; end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#112
  def prepared_pyproject; end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#290
  def pyproject; end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#229
  def pyproject_hash_for(pyproject_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#299
  def python_helper_path; end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#276
  def python_requirement_parser; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#259
  def requirement_changed?(file, dependency); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#205
  def run_poetry_command(command, fingerprint: T.unsafe(nil)); end

  # Using `--lock` avoids doing an install.
  # Using `--no-interaction` avoids asking for passwords.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#198
  def run_poetry_update_command; end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#172
  def sanitize(pyproject_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#247
  def table_declaration_regex(dep); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#145
  def update_python_requirement(pyproject_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#266
  def updated_file(file:, content:); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#93
  def updated_lockfile_content; end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#178
  def updated_lockfile_content_for(pyproject_content); end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#62
  def updated_pyproject_content; end

  # source://dependabot-python//lib/dependabot/python/file_updater/poetry_file_updater.rb#209
  def write_temporary_dependency_files(pyproject_content); end
end

# source://dependabot-python//lib/dependabot/python/file_updater/pyproject_preparer.rb#16
class Dependabot::Python::FileUpdater::PyprojectPreparer
  # @return [PyprojectPreparer] a new instance of PyprojectPreparer
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pyproject_preparer.rb#17
  def initialize(pyproject_content:, lockfile: T.unsafe(nil)); end

  # For hosted Dependabot token will be nil since the credentials aren't present.
  # This is for those running Dependabot themselves and for dry-run.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pyproject_preparer.rb#24
  def add_auth_env_vars(credentials); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pyproject_preparer.rb#60
  def freeze_top_level_dependencies_except(dependencies); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pyproject_preparer.rb#51
  def sanitize; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pyproject_preparer.rb#40
  def update_python_requirement(requirement); end

  private

  # source://dependabot-python//lib/dependabot/python/file_updater/pyproject_preparer.rb#106
  def locked_details(dep_name); end

  # Returns the value of attribute lockfile.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pyproject_preparer.rb#104
  def lockfile; end

  # source://dependabot-python//lib/dependabot/python/file_updater/pyproject_preparer.rb#111
  def normalise(name); end

  # source://dependabot-python//lib/dependabot/python/file_updater/pyproject_preparer.rb#115
  def parsed_lockfile; end

  # Returns the value of attribute pyproject_content.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/pyproject_preparer.rb#104
  def pyproject_content; end
end

# source://dependabot-python//lib/dependabot/python/file_updater/requirement_file_updater.rb#12
class Dependabot::Python::FileUpdater::RequirementFileUpdater
  # @return [RequirementFileUpdater] a new instance of RequirementFileUpdater
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_file_updater.rb#17
  def initialize(dependencies:, dependency_files:, credentials:); end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_file_updater.rb#15
  def credentials; end

  # Returns the value of attribute dependencies.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_file_updater.rb#15
  def dependencies; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_file_updater.rb#15
  def dependency_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_file_updater.rb#23
  def updated_dependency_files; end

  private

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_file_updater.rb#29
  def dependency; end

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_file_updater.rb#34
  def fetch_updated_dependency_files; end

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_file_updater.rb#62
  def get_original_file(filename); end

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_file_updater.rb#50
  def updated_requirement_or_setup_file_content(new_req, old_req); end
end

# source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#14
class Dependabot::Python::FileUpdater::RequirementReplacer
  # @return [RequirementReplacer] a new instance of RequirementReplacer
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#15
  def initialize(content:, dependency_name:, old_requirement:, new_requirement:, new_hash_version: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#24
  def updated_content; end

  private

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#87
  def add_space_after_commas?; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#93
  def add_space_after_operators?; end

  # Returns the value of attribute content.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#41
  def content; end

  # Returns the value of attribute dependency_name.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#41
  def dependency_name; end

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#110
  def hash_algorithm(requirement); end

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#118
  def hash_separator(requirement); end

  # Returns the value of attribute new_hash_version.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#41
  def new_hash_version; end

  # Returns the value of attribute new_requirement.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#41
  def new_requirement; end

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#165
  def normalise(name); end

  # Returns the value of attribute old_requirement.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#41
  def old_requirement; end

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#99
  def original_declaration_replacement_regex; end

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#144
  def original_dependency_declaration_string(old_req); end

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#136
  def package_hashes_for(name:, version:, algorithm:); end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#105
  def requirement_includes_hashes?(requirement); end

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#169
  def requirements_match(req1, req2); end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#44
  def update_hashes?; end

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#62
  def updated_dependency_declaration_string; end

  # source://dependabot-python//lib/dependabot/python/file_updater/requirement_replacer.rb#48
  def updated_requirement_string; end
end

# Take a setup.py, parses it (carefully!) and then create a new, clean
# setup.py using only the information which will appear in the lockfile.
#
# source://dependabot-python//lib/dependabot/python/file_updater/setup_file_sanitizer.rb#12
class Dependabot::Python::FileUpdater::SetupFileSanitizer
  # @return [SetupFileSanitizer] a new instance of SetupFileSanitizer
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/setup_file_sanitizer.rb#13
  def initialize(setup_file:, setup_cfg:); end

  # source://dependabot-python//lib/dependabot/python/file_updater/setup_file_sanitizer.rb#18
  def sanitized_content; end

  private

  # source://dependabot-python//lib/dependabot/python/file_updater/setup_file_sanitizer.rb#60
  def extras_require_hash; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/setup_file_sanitizer.rb#36
  def include_pbr?; end

  # source://dependabot-python//lib/dependabot/python/file_updater/setup_file_sanitizer.rb#40
  def install_requires_array; end

  # source://dependabot-python//lib/dependabot/python/file_updater/setup_file_sanitizer.rb#78
  def parsed_setup_file; end

  # Returns the value of attribute setup_cfg.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/setup_file_sanitizer.rb#34
  def setup_cfg; end

  # Returns the value of attribute setup_file.
  #
  # source://dependabot-python//lib/dependabot/python/file_updater/setup_file_sanitizer.rb#34
  def setup_file; end

  # source://dependabot-python//lib/dependabot/python/file_updater/setup_file_sanitizer.rb#50
  def setup_requires_array; end
end

# source://dependabot-python//lib/dependabot/python/language_version_manager.rb#9
class Dependabot::Python::LanguageVersionManager
  # @return [LanguageVersionManager] a new instance of LanguageVersionManager
  #
  # source://dependabot-python//lib/dependabot/python/language_version_manager.rb#18
  def initialize(python_requirement_parser:); end

  # source://dependabot-python//lib/dependabot/python/language_version_manager.rb#22
  def install_required_python; end

  # source://dependabot-python//lib/dependabot/python/language_version_manager.rb#31
  def python_major_minor; end

  # source://dependabot-python//lib/dependabot/python/language_version_manager.rb#39
  def python_requirement_string; end

  # source://dependabot-python//lib/dependabot/python/language_version_manager.rb#35
  def python_version; end

  # @raise [ToolVersionNotSupported]
  #
  # source://dependabot-python//lib/dependabot/python/language_version_manager.rb#52
  def python_version_from_supported_versions; end

  # source://dependabot-python//lib/dependabot/python/language_version_manager.rb#81
  def python_version_matching(requirements); end

  # source://dependabot-python//lib/dependabot/python/language_version_manager.rb#73
  def python_version_matching_imputed_requirements; end

  # source://dependabot-python//lib/dependabot/python/language_version_manager.rb#69
  def user_specified_python_version; end
end

# This list must match the versions specified at the top of `python/Dockerfile`
#
# source://dependabot-python//lib/dependabot/python/language_version_manager.rb#11
Dependabot::Python::LanguageVersionManager::PRE_INSTALLED_PYTHON_VERSIONS = T.let(T.unsafe(nil), Array)

# source://dependabot-python//lib/dependabot/python/metadata_finder.rb#15
class Dependabot::Python::MetadataFinder < ::Dependabot::MetadataFinders::Base
  # source://dependabot-python//lib/dependabot/python/metadata_finder.rb#18
  def homepage_url; end

  private

  # source://dependabot-python//lib/dependabot/python/metadata_finder.rb#141
  def fetch_authed_url(url); end

  # source://dependabot-python//lib/dependabot/python/metadata_finder.rb#100
  def homepage_body; end

  # source://dependabot-python//lib/dependabot/python/metadata_finder.rb#27
  def look_up_source; end

  # Strip [extras] from name (dependency_name[extra_dep,other_extra])
  #
  # source://dependabot-python//lib/dependabot/python/metadata_finder.rb#170
  def normalised_dependency_name; end

  # source://dependabot-python//lib/dependabot/python/metadata_finder.rb#158
  def possible_listing_urls; end

  # source://dependabot-python//lib/dependabot/python/metadata_finder.rb#122
  def pypi_listing; end

  # source://dependabot-python//lib/dependabot/python/metadata_finder.rb#45
  def source_from_description; end

  # source://dependabot-python//lib/dependabot/python/metadata_finder.rb#75
  def source_from_homepage; end
end

# source://dependabot-python//lib/dependabot/python/metadata_finder.rb#16
Dependabot::Python::MetadataFinder::MAIN_PYPI_URL = T.let(T.unsafe(nil), String)

# source://dependabot-python//lib/dependabot/python/name_normaliser.rb#6
module Dependabot::Python::NameNormaliser
  class << self
    # source://dependabot-python//lib/dependabot/python/name_normaliser.rb#7
    def normalise(name); end

    # source://dependabot-python//lib/dependabot/python/name_normaliser.rb#12
    def normalise_including_extras(name, extras); end
  end
end

# source://dependabot-python//lib/dependabot/python/native_helpers.rb#6
module Dependabot::Python::NativeHelpers
  class << self
    # source://dependabot-python//lib/dependabot/python/native_helpers.rb#24
    def clean_path(path); end

    # source://dependabot-python//lib/dependabot/python/native_helpers.rb#19
    def native_helpers_root; end

    # source://dependabot-python//lib/dependabot/python/native_helpers.rb#7
    def python_helper_path; end

    # source://dependabot-python//lib/dependabot/python/native_helpers.rb#15
    def python_helpers_dir; end

    # source://dependabot-python//lib/dependabot/python/native_helpers.rb#11
    def python_requirements_path; end
  end
end

# source://dependabot-python//lib/dependabot/python/requirement.rb#9
class Dependabot::Python::Requirement < ::Gem::Requirement
  # @return [Requirement] a new instance of Requirement
  #
  # source://dependabot-python//lib/dependabot/python/requirement.rb#60
  def initialize(*requirements); end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/requirement.rb#81
  def exact?; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/requirement.rb#75
  def satisfied_by?(version); end

  private

  # Poetry uses ^ requirements
  # https://github.com/sdispater/poetry#caret-requirement
  #
  # source://dependabot-python//lib/dependabot/python/requirement.rb#115
  def convert_caret_req(req_string); end

  # source://dependabot-python//lib/dependabot/python/requirement.rb#89
  def convert_python_constraint_to_ruby_constraint(req_string); end

  # Poetry uses ~ requirements.
  # https://github.com/sdispater/poetry#tilde-requirements
  #
  # source://dependabot-python//lib/dependabot/python/requirement.rb#106
  def convert_tilde_req(req_string); end

  # source://dependabot-python//lib/dependabot/python/requirement.rb#134
  def convert_wildcard(req_string); end

  class << self
    # source://dependabot-python//lib/dependabot/python/requirement.rb#26
    def parse(obj); end

    # Returns an array of requirements. At least one requirement from the
    # returned array must be satisfied for a version to be valid.
    #
    # NOTE: Or requirements are only valid for Poetry.
    #
    # source://dependabot-python//lib/dependabot/python/requirement.rb#48
    def requirements_array(requirement_string); end
  end
end

# Add equality and arbitrary-equality matchers
#
# source://dependabot-python//lib/dependabot/python/requirement.rb#13
Dependabot::Python::Requirement::OPS = T.let(T.unsafe(nil), Hash)

# source://dependabot-python//lib/dependabot/python/requirement.rb#10
Dependabot::Python::Requirement::OR_SEPARATOR = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement.rb#24
Dependabot::Python::Requirement::PARENS_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement.rb#23
Dependabot::Python::Requirement::PATTERN = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement.rb#22
Dependabot::Python::Requirement::PATTERN_RAW = T.let(T.unsafe(nil), String)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#6
class Dependabot::Python::RequirementParser; end

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#9
Dependabot::Python::RequirementParser::COMPARISON = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#19
Dependabot::Python::RequirementParser::ENV_VAR = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#8
Dependabot::Python::RequirementParser::EXTRA = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#13
Dependabot::Python::RequirementParser::HASH = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#15
Dependabot::Python::RequirementParser::HASHES = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#37
Dependabot::Python::RequirementParser::INSTALL_REQ_WITHOUT_REQUIREMENT = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#28
Dependabot::Python::RequirementParser::INSTALL_REQ_WITH_REQUIREMENT = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#26
Dependabot::Python::RequirementParser::MARKER_EXPR = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#25
Dependabot::Python::RequirementParser::MARKER_EXPR_ONE = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#16
Dependabot::Python::RequirementParser::MARKER_OP = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#24
Dependabot::Python::RequirementParser::MARKER_VAR = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#7
Dependabot::Python::RequirementParser::NAME = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#54
Dependabot::Python::RequirementParser::NAME_WITH_EXTRAS = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#18
Dependabot::Python::RequirementParser::PYTHON_STR = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#17
Dependabot::Python::RequirementParser::PYTHON_STR_C = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#12
Dependabot::Python::RequirementParser::REQUIREMENT = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#14
Dependabot::Python::RequirementParser::REQUIREMENTS = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#45
Dependabot::Python::RequirementParser::VALID_REQ_TXT_REQUIREMENT = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/requirement_parser.rb#10
Dependabot::Python::RequirementParser::VERSION = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/update_checker.rb#18
class Dependabot::Python::UpdateChecker < ::Dependabot::UpdateCheckers::Base
  # source://dependabot-python//lib/dependabot/python/update_checker.rb#36
  def latest_resolvable_version; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#49
  def latest_resolvable_version_with_no_unlock; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#32
  def latest_version; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#64
  def lowest_resolvable_security_fix_version; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#60
  def lowest_security_fix_version; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker.rb#82
  def requirements_unlocked_or_can_be?; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#86
  def requirements_update_strategy; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#73
  def updated_requirements; end

  private

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#198
  def current_requirement_string; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker.rb#159
  def exact_requirement?(reqs); end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#241
  def fetch_latest_version; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#105
  def fetch_lowest_resolvable_security_fix_version; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#245
  def latest_version_finder; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker.rb#96
  def latest_version_resolvable_with_full_unlock?; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker.rb#260
  def library?; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#323
  def library_details; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#303
  def normalised_name(name); end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#339
  def pip_compile_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#170
  def pip_compile_version_resolver; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#179
  def pip_version_resolver; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#166
  def pipenv_version_resolver; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#307
  def pipfile; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#311
  def pipfile_lock; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker.rb#256
  def poetry_based?; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#327
  def poetry_details; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#319
  def poetry_lock; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#175
  def poetry_version_resolver; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#315
  def pyproject; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#153
  def pyproject_resolver; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#295
  def requirement_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#299
  def requirements; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#114
  def resolver; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#190
  def resolver_args; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#124
  def resolver_type; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#331
  def standard_details; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#145
  def subdependency_resolver; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#335
  def toml_content; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#211
  def unlocked_requirement_string; end

  # @raise [NotImplementedError]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker.rb#101
  def updated_dependencies_after_full_unlock; end

  # source://dependabot-python//lib/dependabot/python/update_checker.rb#227
  def updated_version_req_lower_bound; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker.rb#287
  def updating_in_file?; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker.rb#279
  def updating_pipfile?; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker.rb#283
  def updating_pyproject?; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker.rb#291
  def updating_requirements_file?; end
end

# source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#11
class Dependabot::Python::UpdateChecker::IndexFinder
  # @return [IndexFinder] a new instance of IndexFinder
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#15
  def initialize(dependency_files:, credentials:); end

  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#20
  def index_urls; end

  private

  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#185
  def authed_base_url(base_url); end

  # @raise [PrivateSourceAuthenticationFailure]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#156
  def clean_check_and_remove_environment_variables(url); end

  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#138
  def config_variable_index_urls; end

  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#192
  def credential_for(url); end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#42
  def credentials; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#42
  def dependency_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#44
  def main_index_url; end

  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#217
  def pip_compile_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#201
  def pip_conf; end

  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#77
  def pip_conf_index_urls; end

  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#205
  def pipfile; end

  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#93
  def pipfile_index_urls; end

  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#209
  def pyproject; end

  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#112
  def pyproject_index_urls; end

  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#58
  def requirement_file_index_urls; end

  # source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#213
  def requirements_files; end
end

# source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#13
Dependabot::Python::UpdateChecker::IndexFinder::ENVIRONMENT_VARIABLE_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/update_checker/index_finder.rb#12
Dependabot::Python::UpdateChecker::IndexFinder::PYPI_BASE_URL = T.let(T.unsafe(nil), String)

# source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#18
class Dependabot::Python::UpdateChecker::LatestVersionFinder
  # @return [LatestVersionFinder] a new instance of LatestVersionFinder
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#21
  def initialize(dependency:, dependency_files:, credentials:, ignored_versions:, security_advisories:, raise_on_ignored: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#32
  def latest_version(python_version: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#37
  def latest_version_with_no_unlock(python_version: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#42
  def lowest_security_fix_version(python_version: T.unsafe(nil)); end

  private

  # See https://www.python.org/dev/peps/pep-0503/ for details of the
  # Simple Repository API we use here.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#144
  def available_versions; end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#199
  def build_python_requirement_from_link(link); end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#49
  def credentials; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#49
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#49
  def dependency_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#52
  def fetch_latest_version(python_version:); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#61
  def fetch_latest_version_with_no_unlock(python_version:); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#71
  def fetch_lowest_security_fix_version(python_version:); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#105
  def filter_ignored_versions(versions_array); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#115
  def filter_lower_versions(versions_array); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#121
  def filter_out_of_range_versions(versions_array); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#99
  def filter_prerelease_versions(versions_array); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#88
  def filter_unsupported_versions(versions_array, python_version); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#84
  def filter_yanked_versions(versions_array); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#192
  def get_version_from_filename(filename); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#234
  def ignore_requirements; end

  # Returns the value of attribute ignored_versions.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#49
  def ignored_versions; end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#212
  def index_urls; end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#242
  def name_regex; end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#238
  def normalised_name; end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#227
  def registry_index_response(index_url); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#220
  def registry_response_for_dependency(index_url); end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#251
  def requirement_class; end

  # Returns the value of attribute security_advisories.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#49
  def security_advisories; end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#247
  def version_class; end

  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#175
  def version_details_from_link(link); end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/latest_version_finder.rb#130
  def wants_prerelease?; end
end

# source://dependabot-python//lib/dependabot/python/update_checker.rb#26
Dependabot::Python::UpdateChecker::MAIN_PYPI_INDEXES = T.let(T.unsafe(nil), Array)

# This class does version resolution for pip-compile. Its approach is:
# - Unlock the dependency we're checking in the requirements.in file
# - Run `pip-compile` and see what the result is
#
# source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#26
class Dependabot::Python::UpdateChecker::PipCompileVersionResolver
  # @return [PipCompileVersionResolver] a new instance of PipCompileVersionResolver
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#38
  def initialize(dependency:, dependency_files:, credentials:); end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#36
  def credentials; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#36
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#36
  def dependency_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#45
  def latest_resolvable_version(requirement: T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#52
  def resolvable?(version:); end

  private

  # Needed because pip-compile's resolver isn't perfect.
  # Note: We raise errors from this method, rather than returning a
  # boolean, so that all deps for this repo will raise identical
  # errors when failing to update
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#188
  def check_original_requirements_resolvable; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#356
  def clean_error_message(message); end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#119
  def compilation_error?(error); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#377
  def compiled_file_for_filename(filename); end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#393
  def compiled_file_includes_dependency?(compiled_file); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#478
  def compiled_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#65
  def fetch_latest_resolvable_version_string(requirement:); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#360
  def filenames_to_compile; end

  # @raise [Dependabot::OutOfDisk]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#125
  def handle_pip_compile_errors(error); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#463
  def language_version_manager; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#352
  def normalise(name); end

  # If the files we need to update require one another then we need to
  # update them in the right order
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#405
  def order_filenames_for_compilation(filenames); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#389
  def output_file_regex(filename); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#439
  def parse_updated_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#474
  def pip_compile_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#247
  def pip_compile_index_options; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#233
  def pip_compile_options(filename); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#223
  def pip_compile_options_fingerprint(options); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#270
  def python_env; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#456
  def python_requirement_parser; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#420
  def requirement_map; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#219
  def run_command(command, fingerprint:, env: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#261
  def run_pip_compile_command(command, fingerprint:); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#321
  def sanitized_setup_file_content(file); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#331
  def setup_cfg(file); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#482
  def setup_cfg_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#470
  def setup_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#337
  def update_req_file(file, updated_req); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#314
  def write_original_manifest_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#285
  def write_temporary_dependency_files(updated_req: T.unsafe(nil), update_requirement: T.unsafe(nil)); end
end

# source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#34
Dependabot::Python::UpdateChecker::PipCompileVersionResolver::ERROR_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#27
Dependabot::Python::UpdateChecker::PipCompileVersionResolver::GIT_DEPENDENCY_UNREACHABLE_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#28
Dependabot::Python::UpdateChecker::PipCompileVersionResolver::GIT_REFERENCE_NOT_FOUND_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#29
Dependabot::Python::UpdateChecker::PipCompileVersionResolver::NATIVE_COMPILATION_ERROR = T.let(T.unsafe(nil), String)

# See https://packaging.python.org/en/latest/tutorials/packaging-projects/#configuring-metadata
#
# source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#32
Dependabot::Python::UpdateChecker::PipCompileVersionResolver::PYTHON_PACKAGE_NAME_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/update_checker/pip_compile_version_resolver.rb#33
Dependabot::Python::UpdateChecker::PipCompileVersionResolver::RESOLUTION_IMPOSSIBLE_ERROR = T.let(T.unsafe(nil), String)

# source://dependabot-python//lib/dependabot/python/update_checker/pip_version_resolver.rb#12
class Dependabot::Python::UpdateChecker::PipVersionResolver
  # @return [PipVersionResolver] a new instance of PipVersionResolver
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_version_resolver.rb#13
  def initialize(dependency:, dependency_files:, credentials:, ignored_versions:, security_advisories:, raise_on_ignored: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_version_resolver.rb#24
  def latest_resolvable_version; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_version_resolver.rb#28
  def latest_resolvable_version_with_no_unlock; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_version_resolver.rb#33
  def lowest_resolvable_security_fix_version; end

  private

  # Returns the value of attribute credentials.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_version_resolver.rb#40
  def credentials; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_version_resolver.rb#40
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_version_resolver.rb#40
  def dependency_files; end

  # Returns the value of attribute ignored_versions.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_version_resolver.rb#40
  def ignored_versions; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_version_resolver.rb#61
  def language_version_manager; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_version_resolver.rb#43
  def latest_version_finder; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pip_version_resolver.rb#54
  def python_requirement_parser; end

  # Returns the value of attribute security_advisories.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pip_version_resolver.rb#40
  def security_advisories; end
end

# This class does version resolution for Pipfiles. Its current approach
# is somewhat crude:
# - Unlock the dependency we're checking in the Pipfile
# - Freeze all of the other dependencies in the Pipfile
# - Run `pipenv lock` and see what the result is
#
# Unfortunately, Pipenv doesn't resolve how we'd expect - it appears to
# just raise if the latest version can't be resolved. Knowing that is
# still better than nothing, though.
#
# source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#31
class Dependabot::Python::UpdateChecker::PipenvVersionResolver
  # @return [PipenvVersionResolver] a new instance of PipenvVersionResolver
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#44
  def initialize(dependency:, dependency_files:, credentials:); end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#42
  def credentials; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#42
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#42
  def dependency_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#50
  def latest_resolvable_version(requirement: T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#57
  def resolvable?(version:); end

  private

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#378
  def add_private_sources(pipfile_content); end

  # Needed because Pipenv's resolver isn't perfect.
  # Note: We raise errors from this method, rather than returning a
  # boolean, so that all deps for this repo will raise identical
  # errors when failing to update
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#192
  def check_original_requirements_resolvable; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#234
  def clean_error_message(message); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#66
  def fetch_latest_resolvable_version_string(requirement:); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#91
  def fetch_version_from_parsed_lockfile(updated_lockfile); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#331
  def freeze_other_dependencies(pipfile_content); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#122
  def handle_pipenv_errors(error); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#204
  def handle_pipenv_errors_resolving_original_reqs(error); end

  # @raise [DependencyFileNotResolvable]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#254
  def handle_pipenv_installation_error(error_message); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#298
  def install_required_python; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#418
  def language_version_manager; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#429
  def lockfile; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#407
  def normalise(name); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#397
  def pipenv_env_variables; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#425
  def pipfile; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#322
  def pipfile_content(updated_requirement:); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#411
  def python_requirement_parser; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#384
  def run_command(command, env: T.unsafe(nil), fingerprint: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#388
  def run_pipenv_command(command, env: T.unsafe(nil)); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#309
  def sanitized_setup_file_content(file); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#344
  def set_target_dependency_req(pipfile_content, updated_requirement); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#317
  def setup_cfg(file); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#437
  def setup_cfg_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#433
  def setup_files; end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#366
  def subdep_type?(type); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#337
  def update_python_requirement(pipfile_content); end

  # source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#267
  def write_temporary_dependency_files(updated_req: T.unsafe(nil), update_pipfile: T.unsafe(nil)); end
end

# source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#40
Dependabot::Python::UpdateChecker::PipenvVersionResolver::DEPENDENCY_TYPES = T.let(T.unsafe(nil), Array)

# source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#32
Dependabot::Python::UpdateChecker::PipenvVersionResolver::GIT_DEPENDENCY_UNREACHABLE_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#33
Dependabot::Python::UpdateChecker::PipenvVersionResolver::GIT_REFERENCE_NOT_FOUND_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#34
Dependabot::Python::UpdateChecker::PipenvVersionResolver::PIPENV_INSTALLATION_ERROR = T.let(T.unsafe(nil), String)

# source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#35
Dependabot::Python::UpdateChecker::PipenvVersionResolver::PIPENV_INSTALLATION_ERROR_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/update_checker/pipenv_version_resolver.rb#38
Dependabot::Python::UpdateChecker::PipenvVersionResolver::PIPENV_RANGE_WARNING = T.let(T.unsafe(nil), Regexp)

# This class does version resolution for pyproject.toml files.
#
# source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#25
class Dependabot::Python::UpdateChecker::PoetryVersionResolver
  # @return [PoetryVersionResolver] a new instance of PoetryVersionResolver
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#43
  def initialize(dependency:, dependency_files:, credentials:); end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#41
  def credentials; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#41
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#41
  def dependency_files; end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#49
  def latest_resolvable_version(requirement: T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#56
  def resolvable?(version:); end

  private

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#201
  def add_auth_env_vars; end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#155
  def check_original_requirements_resolvable; end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#174
  def clean_error_message(message); end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#73
  def fetch_latest_resolvable_version_string(requirement:); end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#101
  def fetch_version_from_parsed_lockfile(updated_lockfile); end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#235
  def freeze_other_dependencies(pyproject_content); end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#112
  def handle_poetry_errors(error); end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#291
  def language_version_manager; end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#306
  def lockfile; end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#314
  def normalise(name); end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#302
  def poetry_lock; end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#298
  def pyproject; end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#284
  def python_requirement_parser; end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#310
  def run_poetry_command(command, fingerprint: T.unsafe(nil)); end

  # Using `--lock` avoids doing an install.
  # Using `--no-interaction` avoids asking for passwords.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#148
  def run_poetry_update_command; end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#223
  def sanitize_pyproject_content(pyproject_content); end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#216
  def sanitized_pyproject_content; end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#241
  def set_target_dependency_req(pyproject_content, updated_requirement); end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#280
  def subdep_type; end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#268
  def update_dependency_requirement(toml_node, requirement); end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#229
  def update_python_requirement(pyproject_content); end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#207
  def updated_pyproject_content(updated_requirement:); end

  # source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#179
  def write_temporary_dependency_files(updated_req: T.unsafe(nil), update_pyproject: T.unsafe(nil)); end
end

# source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#35
Dependabot::Python::UpdateChecker::PoetryVersionResolver::GIT_DEPENDENCY_UNREACHABLE_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/update_checker/poetry_version_resolver.rb#26
Dependabot::Python::UpdateChecker::PoetryVersionResolver::GIT_REFERENCE_NOT_FOUND_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#12
class Dependabot::Python::UpdateChecker::RequirementsUpdater
  # @return [RequirementsUpdater] a new instance of RequirementsUpdater
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#21
  def initialize(requirements:, update_strategy:, has_lockfile:, latest_resolvable_version:); end

  # Returns the value of attribute has_lockfile.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#18
  def has_lockfile; end

  # Returns the value of attribute latest_resolvable_version.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#18
  def latest_resolvable_version; end

  # Returns the value of attribute requirements.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#18
  def requirements; end

  # Returns the value of attribute update_strategy.
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#18
  def update_strategy; end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#33
  def updated_requirements; end

  private

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#145
  def add_new_requirement_option(req_string); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#260
  def at_same_precision(new_version, old_version); end

  # Updates the version in a constraint to be the given version
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#298
  def bump_version(req_string, version_to_be_permitted); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#309
  def convert_to_range(req_string, version_to_be_permitted); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#243
  def find_and_update_equality_match(requirement_strings); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#339
  def index_to_update_for(req_string); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#328
  def lower_bound_segments_for_req(req_string); end

  # @return [Boolean]
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#237
  def new_version_satisfies?(req); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#382
  def requirement_class; end

  # Updates the version in a "<" constraint to allow the given version
  #
  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#357
  def update_greatest_version(version, version_to_be_permitted); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#107
  def update_pyproject_version(req); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#101
  def update_pyproject_version_if_needed(req); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#210
  def update_requirement(req); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#204
  def update_requirement_if_needed(req); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#273
  def update_requirements_range(requirement_strings); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#73
  def updated_pipfile_requirement(req); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#79
  def updated_pyproject_requirement(req); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#188
  def updated_requirement(req); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#50
  def updated_setup_requirement(req); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#132
  def widen_pyproject_requirement(req); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#229
  def widen_requirement(req); end

  # source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#167
  def widen_requirement_range(req_string); end
end

# source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#13
Dependabot::Python::UpdateChecker::RequirementsUpdater::PYPROJECT_OR_SEPARATOR = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#14
Dependabot::Python::UpdateChecker::RequirementsUpdater::PYPROJECT_SEPARATOR = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/update_checker/requirements_updater.rb#16
class Dependabot::Python::UpdateChecker::RequirementsUpdater::UnfixableRequirement < ::StandardError; end

# source://dependabot-python//lib/dependabot/python/update_checker.rb#30
Dependabot::Python::UpdateChecker::VERSION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-python//lib/dependabot/python/version.rb#13
class Dependabot::Python::Version < ::Dependabot::Version
  # @return [Version] a new instance of Version
  #
  # source://dependabot-python//lib/dependabot/python/version.rb#30
  def initialize(version); end

  # source://dependabot-python//lib/dependabot/python/version.rb#55
  def <=>(other); end

  # Returns the value of attribute epoch.
  #
  # source://dependabot-python//lib/dependabot/python/version.rb#14
  def epoch; end

  # source://dependabot-python//lib/dependabot/python/version.rb#51
  def inspect; end

  # Returns the value of attribute local_version.
  #
  # source://dependabot-python//lib/dependabot/python/version.rb#15
  def local_version; end

  # Returns the value of attribute post_release_version.
  #
  # source://dependabot-python//lib/dependabot/python/version.rb#16
  def post_release_version; end

  # source://dependabot-python//lib/dependabot/python/version.rb#47
  def to_s; end

  private

  # source://dependabot-python//lib/dependabot/python/version.rb#72
  def epoch_comparison(other); end

  # source://dependabot-python//lib/dependabot/python/version.rb#86
  def local_version_comparison(other); end

  # source://dependabot-python//lib/dependabot/python/version.rb#104
  def normalise_prerelease(version); end

  # source://dependabot-python//lib/dependabot/python/version.rb#76
  def post_version_comparison(other); end

  class << self
    # @return [Boolean]
    #
    # source://dependabot-python//lib/dependabot/python/version.rb#24
    def correct?(version); end
  end
end

# source://dependabot-python//lib/dependabot/python/version.rb#22
Dependabot::Python::Version::ANCHORED_VERSION_PATTERN = T.let(T.unsafe(nil), Regexp)

# See https://peps.python.org/pep-0440/#appendix-b-parsing-version-strings-with-regular-expressions
#
# source://dependabot-python//lib/dependabot/python/version.rb#19
Dependabot::Python::Version::VERSION_PATTERN = T.let(T.unsafe(nil), String)
