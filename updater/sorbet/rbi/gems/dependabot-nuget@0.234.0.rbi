# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `dependabot-nuget` gem.
# Please instead update this file by running `bin/tapioca gem dependabot-nuget`.

# Dotnet pre-release versions use 1.0.1-rc1 syntax, which Gem::Version
# converts into 1.0.1.pre.rc1. We override the `to_s` method to stop that
# alteration.
# Dotnet also supports build versions, separated with a "+".
#
# source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#8
module Dependabot
  class << self
    # source://dependabot-common/0.234.0/lib/dependabot/logger.rb#7
    def logger; end

    # source://dependabot-common/0.234.0/lib/dependabot/logger.rb#11
    def logger=(logger); end
  end
end

# source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#9
module Dependabot::Nuget; end

# source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#10
class Dependabot::Nuget::FileFetcher < ::Dependabot::FileFetchers::Base
  private

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#186
  def csproj_file; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#106
  def directory_build_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#210
  def directory_packages_props_file; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#252
  def dotnet_tools_json; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#110
  def fetch_directory_build_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#28
  def fetch_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#281
  def fetch_imported_property_files(file:, previously_fetched_files:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#202
  def fsproj_file; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#246
  def global_json; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#264
  def imported_property_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#218
  def nuget_config_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#73
  def packages_config_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#258
  def packages_props; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#143
  def possible_build_file_paths(base); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#54
  def project_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#230
  def search_in_directory_and_parents(dir, visited_directories); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#88
  def sln_file_names; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#177
  def sln_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#154
  def sln_project_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#194
  def vbproj_file; end

  class << self
    # @return [Boolean]
    #
    # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#14
    def required_files_in?(filenames); end

    # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher.rb#22
    def required_files_message; end
  end
end

# source://dependabot-nuget//lib/dependabot/nuget/file_fetcher/import_paths_finder.rb#12
class Dependabot::Nuget::FileFetcher::ImportPathsFinder
  # @return [ImportPathsFinder] a new instance of ImportPathsFinder
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher/import_paths_finder.rb#13
  def initialize(project_file:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher/import_paths_finder.rb#17
  def import_paths; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher/import_paths_finder.rb#27
  def project_reference_paths; end

  private

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher/import_paths_finder.rb#46
  def current_dir; end

  # Returns the value of attribute project_file.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher/import_paths_finder.rb#44
  def project_file; end
end

# source://dependabot-nuget//lib/dependabot/nuget/file_fetcher/sln_project_paths_finder.rb#10
class Dependabot::Nuget::FileFetcher::SlnProjectPathsFinder
  # @return [SlnProjectPathsFinder] a new instance of SlnProjectPathsFinder
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher/sln_project_paths_finder.rb#11
  def initialize(sln_file:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher/sln_project_paths_finder.rb#15
  def project_paths; end

  private

  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher/sln_project_paths_finder.rb#40
  def current_dir; end

  # Returns the value of attribute sln_file.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_fetcher/sln_project_paths_finder.rb#38
  def sln_file; end
end

# source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#14
class Dependabot::Nuget::FileParser < ::Dependabot::FileParsers::Base
  # source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#23
  def parse; end

  private

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#110
  def check_required_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#106
  def dotnet_tools_json; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#62
  def dotnet_tools_json_dependencies; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#102
  def global_json; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#56
  def global_json_dependencies; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#98
  def nuget_configs; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#45
  def packages_config_dependencies; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#83
  def packages_config_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#34
  def project_file_dependencies; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#68
  def project_file_parser; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#73
  def project_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#89
  def project_import_files; end
end

# source://dependabot-nuget//lib/dependabot/nuget/file_parser/dotnet_tools_json_parser.rb#14
class Dependabot::Nuget::FileParser::DotNetToolsJsonParser
  # @return [DotNetToolsJsonParser] a new instance of DotNetToolsJsonParser
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/dotnet_tools_json_parser.rb#17
  def initialize(dotnet_tools_json:); end

  # @raise [Dependabot::DependencyFileNotParseable]
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/dotnet_tools_json_parser.rb#21
  def dependency_set; end

  private

  # Returns the value of attribute dotnet_tools_json.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/dotnet_tools_json_parser.rb#51
  def dotnet_tools_json; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/dotnet_tools_json_parser.rb#53
  def parsed_dotnet_tools_json; end
end

# source://dependabot-nuget//lib/dependabot/nuget/file_parser/global_json_parser.rb#14
class Dependabot::Nuget::FileParser::GlobalJsonParser
  # @return [GlobalJsonParser] a new instance of GlobalJsonParser
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/global_json_parser.rb#17
  def initialize(global_json:); end

  # @raise [Dependabot::DependencyFileNotParseable]
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/global_json_parser.rb#21
  def dependency_set; end

  private

  # Returns the value of attribute global_json.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/global_json_parser.rb#48
  def global_json; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/global_json_parser.rb#50
  def parsed_global_json; end
end

# source://dependabot-nuget//lib/dependabot/nuget/file_parser.rb#21
Dependabot::Nuget::FileParser::PACKAGE_CONF_DEPENDENCY_SELECTOR = T.let(T.unsafe(nil), String)

# source://dependabot-nuget//lib/dependabot/nuget/file_parser/packages_config_parser.rb#14
class Dependabot::Nuget::FileParser::PackagesConfigParser
  # @return [PackagesConfigParser] a new instance of PackagesConfigParser
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/packages_config_parser.rb#19
  def initialize(packages_config:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/packages_config_parser.rb#23
  def dependency_set; end

  private

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/packages_config_parser.rb#50
  def dependency_name(dependency_node); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/packages_config_parser.rb#62
  def dependency_type(dependency_node); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/packages_config_parser.rb#55
  def dependency_version(dependency_node); end

  # Returns the value of attribute packages_config.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/packages_config_parser.rb#48
  def packages_config; end
end

# source://dependabot-nuget//lib/dependabot/nuget/file_parser/packages_config_parser.rb#17
Dependabot::Nuget::FileParser::PackagesConfigParser::DEPENDENCY_SELECTOR = T.let(T.unsafe(nil), String)

# source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#14
class Dependabot::Nuget::FileParser::ProjectFileParser
  # @return [ProjectFileParser] a new instance of ProjectFileParser
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#28
  def initialize(dependency_files:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#32
  def dependency_set(project_file:); end

  private

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#72
  def add_sdk_ref_from_project(sdk_references, dependency_set, project_file); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#60
  def add_sdk_references(doc, dependency_set, project_file); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#82
  def add_sdk_refs_from_import_tags(doc, dependency_set, project_file); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#94
  def add_sdk_refs_from_project(doc, dependency_set, project_file); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#103
  def add_sdk_refs_from_sdk_tags(doc, dependency_set, project_file); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#115
  def build_dependency(name, req, version, prop_name, project_file, dev: T.unsafe(nil)); end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#58
  def dependency_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#145
  def dependency_name(dependency_node, project_file); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#161
  def dependency_requirement(dependency_node, project_file); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#168
  def dependency_version(dependency_node, project_file); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#221
  def details_for_property(property_name, project_file); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#207
  def evaluated_value(value, project_file); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#195
  def get_node_version_value(node); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#229
  def property_value_finder; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#183
  def req_property_name(dependency_node); end
end

# source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#18
Dependabot::Nuget::FileParser::ProjectFileParser::DEPENDENCY_SELECTOR = T.let(T.unsafe(nil), String)

# source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#26
Dependabot::Nuget::FileParser::ProjectFileParser::ITEM_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#24
Dependabot::Nuget::FileParser::ProjectFileParser::PROJECT_SDK_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-nuget//lib/dependabot/nuget/file_parser/project_file_parser.rb#25
Dependabot::Nuget::FileParser::ProjectFileParser::PROPERTY_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#13
class Dependabot::Nuget::FileParser::PropertyValueFinder
  # @return [PropertyValueFinder] a new instance of PropertyValueFinder
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#16
  def initialize(dependency_files:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#56
  def check_next_level_of_stack(node_details, stack); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#20
  def property_details(property_name:, callsite_file:, stack: T.unsafe(nil)); end

  private

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#164
  def build_packages_file_for_project(project_file); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#147
  def build_props_file_for_project(project_file); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#131
  def build_targets_file_for_project(project_file); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#76
  def deep_find_prop_node(property:, file:); end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#74
  def dependency_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#117
  def find_property_in_directory_build_packages(property:, callsite_file:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#110
  def find_property_in_directory_build_props(property:, callsite_file:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#103
  def find_property_in_directory_build_targets(property:, callsite_file:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#124
  def find_property_in_packages_props(property:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#188
  def node_details(file:, node:, property:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#180
  def packages_props_file; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#184
  def property_xpath(property_name); end
end

# source://dependabot-nuget//lib/dependabot/nuget/file_parser/property_value_finder.rb#14
Dependabot::Nuget::FileParser::PropertyValueFinder::PROPERTY_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-nuget//lib/dependabot/nuget/file_updater.rb#9
class Dependabot::Nuget::FileUpdater < ::Dependabot::FileUpdaters::Base
  # source://dependabot-nuget//lib/dependabot/nuget/file_updater.rb#26
  def updated_dependency_files; end

  private

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater.rb#67
  def check_required_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater.rb#149
  def declaration_finder(dependency, requirement); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater.rb#63
  def dotnet_tools_json; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater.rb#59
  def global_json; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater.rb#129
  def original_declarations(dependency, requirement); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater.rb#53
  def packages_config_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater.rb#49
  def project_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater.rb#110
  def update_declaration(files, dependency, file, old_req, new_req); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater.rb#73
  def update_files_for_dependency(files:, dependency:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater.rb#97
  def update_property_value(files, file, req); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater.rb#170
  def updated_declaration(old_declaration, previous_req, requirement); end

  class << self
    # source://dependabot-nuget//lib/dependabot/nuget/file_updater.rb#14
    def updated_files_regex; end
  end
end

# source://dependabot-nuget//lib/dependabot/nuget/file_updater/packages_config_declaration_finder.rb#10
class Dependabot::Nuget::FileUpdater::PackagesConfigDeclarationFinder
  # @return [PackagesConfigDeclarationFinder] a new instance of PackagesConfigDeclarationFinder
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/packages_config_declaration_finder.rb#18
  def initialize(dependency_name:, packages_config:, declaring_requirement:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/packages_config_declaration_finder.rb#36
  def declaration_nodes; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/packages_config_declaration_finder.rb#32
  def declaration_strings; end

  # Returns the value of attribute declaring_requirement.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/packages_config_declaration_finder.rb#15
  def declaring_requirement; end

  # Returns the value of attribute dependency_name.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/packages_config_declaration_finder.rb#15
  def dependency_name; end

  # Returns the value of attribute packages_config.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/packages_config_declaration_finder.rb#15
  def packages_config; end

  private

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/packages_config_declaration_finder.rb#62
  def deep_find_declarations(string); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/packages_config_declaration_finder.rb#45
  def fetch_declaration_strings; end
end

# source://dependabot-nuget//lib/dependabot/nuget/file_updater/packages_config_declaration_finder.rb#11
Dependabot::Nuget::FileUpdater::PackagesConfigDeclarationFinder::DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#10
class Dependabot::Nuget::FileUpdater::ProjectFileDeclarationFinder
  # @return [ProjectFileDeclarationFinder] a new instance of ProjectFileDeclarationFinder
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#39
  def initialize(dependency_name:, dependency_files:, declaring_requirement:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#51
  def declaration_nodes; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#46
  def declaration_strings; end

  # Returns the value of attribute declaring_requirement.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#36
  def declaring_requirement; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#36
  def dependency_files; end

  # Returns the value of attribute dependency_name.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#36
  def dependency_name; end

  private

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#108
  def declaring_file; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#102
  def deep_find_declarations(string); end

  # @return [Boolean]
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#135
  def desired_sdk_reference?(sdk_reference, dep_name, dep_version); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#69
  def fetch_declaration_strings; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#88
  def fetch_sdk_strings; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#128
  def get_attribute_value_nocase(element, name); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#59
  def get_element_from_node(node); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#93
  def get_node_version_value(node); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#120
  def parse_element(string, name); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#116
  def sdk_import_strings; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#140
  def sdk_project_strings; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#158
  def sdk_sdk_strings; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#162
  def sdk_strings(regex, element_name, name_attribute, version_attribute); end
end

# source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#11
Dependabot::Nuget::FileUpdater::ProjectFileDeclarationFinder::DECLARATION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#24
Dependabot::Nuget::FileUpdater::ProjectFileDeclarationFinder::SDK_IMPORT_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#28
Dependabot::Nuget::FileUpdater::ProjectFileDeclarationFinder::SDK_PROJECT_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-nuget//lib/dependabot/nuget/file_updater/project_file_declaration_finder.rb#31
Dependabot::Nuget::FileUpdater::ProjectFileDeclarationFinder::SDK_SDK_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-nuget//lib/dependabot/nuget/file_updater/property_value_updater.rb#13
class Dependabot::Nuget::FileUpdater::PropertyValueUpdater
  # @return [PropertyValueUpdater] a new instance of PropertyValueUpdater
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/property_value_updater.rb#14
  def initialize(dependency_files:); end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/property_value_updater.rb#18
  def update_files_for_property_change(property_name:, updated_value:, callsite_file:); end

  private

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/property_value_updater.rb#47
  def dependency_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/property_value_updater.rb#49
  def property_value_finder; end

  # source://dependabot-nuget//lib/dependabot/nuget/file_updater/property_value_updater.rb#55
  def update_file(file:, content:); end
end

# source://dependabot-nuget//lib/dependabot/nuget/metadata_finder.rb#11
class Dependabot::Nuget::MetadataFinder < ::Dependabot::MetadataFinders::Base
  private

  # source://dependabot-nuget//lib/dependabot/nuget/metadata_finder.rb#139
  def auth_header; end

  # source://dependabot-nuget//lib/dependabot/nuget/metadata_finder.rb#110
  def dependency_nuspec_file; end

  # source://dependabot-nuget//lib/dependabot/nuget/metadata_finder.rb#121
  def dependency_nuspec_url; end

  # source://dependabot-nuget//lib/dependabot/nuget/metadata_finder.rb#128
  def dependency_source_url; end

  # source://dependabot-nuget//lib/dependabot/nuget/metadata_finder.rb#58
  def extract_search_url(body); end

  # source://dependabot-nuget//lib/dependabot/nuget/metadata_finder.rb#65
  def extract_source_repo(body); end

  # source://dependabot-nuget//lib/dependabot/nuget/metadata_finder.rb#14
  def look_up_source; end

  # source://dependabot-nuget//lib/dependabot/nuget/metadata_finder.rb#82
  def look_up_source_in_nuspec(nuspec); end

  # source://dependabot-nuget//lib/dependabot/nuget/metadata_finder.rb#97
  def source_from_anywhere_in_nuspec(nuspec); end

  # source://dependabot-nuget//lib/dependabot/nuget/metadata_finder.rb#31
  def src_repo_from_project; end
end

# source://dependabot-nuget//lib/dependabot/nuget/requirement.rb#11
class Dependabot::Nuget::Requirement < ::Gem::Requirement
  # @return [Requirement] a new instance of Requirement
  #
  # source://dependabot-nuget//lib/dependabot/nuget/requirement.rb#32
  def initialize(*requirements); end

  # @return [Boolean]
  #
  # source://dependabot-nuget//lib/dependabot/nuget/requirement.rb#40
  def satisfied_by?(version); end

  private

  # source://dependabot-nuget//lib/dependabot/nuget/requirement.rb#47
  def convert_dotnet_constraint_to_ruby_constraint(req_string); end

  # source://dependabot-nuget//lib/dependabot/nuget/requirement.rb#59
  def convert_dotnet_range_to_ruby_range(req_string); end

  # source://dependabot-nuget//lib/dependabot/nuget/requirement.rb#83
  def convert_range_wildcard_req(req_string); end

  # source://dependabot-nuget//lib/dependabot/nuget/requirement.rb#91
  def convert_wildcard_req(req_string); end

  class << self
    # source://dependabot-nuget//lib/dependabot/nuget/requirement.rb#12
    def parse(obj); end

    # For consistency with other languages, we define a requirements array.
    # Dotnet doesn't have an `OR` separator for requirements, so it always
    # contains a single element.
    #
    # source://dependabot-nuget//lib/dependabot/nuget/requirement.rb#28
    def requirements_array(requirement_string); end
  end
end

# source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#10
class Dependabot::Nuget::UpdateChecker < ::Dependabot::UpdateCheckers::Base
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#19
  def latest_resolvable_version; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#36
  def latest_resolvable_version_with_no_unlock; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#15
  def latest_version; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#30
  def lowest_resolvable_security_fix_version; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#26
  def lowest_security_fix_version; end

  # @return [Boolean]
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#59
  def requirements_unlocked_or_can_be?; end

  # @return [Boolean]
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#50
  def up_to_date?; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#41
  def updated_requirements; end

  private

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#140
  def all_property_based_dependencies; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#134
  def declarations_using_a_property; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#87
  def latest_version_details; end

  # @return [Boolean]
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#71
  def latest_version_resolvable_with_full_unlock?; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#91
  def lowest_security_fix_version_details; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#81
  def preferred_version_details; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#108
  def property_updater; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#77
  def updated_dependencies_after_full_unlock; end

  # @return [Boolean]
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#120
  def version_comes_from_multi_dependency_property?; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker.rb#96
  def version_finder; end
end

# source://dependabot-nuget//lib/dependabot/nuget/update_checker/property_updater.rb#10
class Dependabot::Nuget::UpdateChecker::PropertyUpdater
  # @return [PropertyUpdater] a new instance of PropertyUpdater
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/property_updater.rb#14
  def initialize(dependency:, dependency_files:, credentials:, target_version_details:, ignored_versions:, raise_on_ignored: T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/property_updater.rb#27
  def update_possible?; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/property_updater.rb#45
  def updated_dependencies; end

  private

  # Returns the value of attribute credentials.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/property_updater.rb#63
  def credentials; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/property_updater.rb#66
  def dependencies_using_property; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/property_updater.rb#63
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/property_updater.rb#63
  def dependency_files; end

  # Returns the value of attribute ignored_versions.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/property_updater.rb#63
  def ignored_versions; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/property_updater.rb#78
  def property_name; end

  # Returns the value of attribute source_details.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/property_updater.rb#63
  def source_details; end

  # Returns the value of attribute target_version.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/property_updater.rb#63
  def target_version; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/property_updater.rb#88
  def updated_requirements(dep); end
end

# source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#13
class Dependabot::Nuget::UpdateChecker::RepositoryFinder
  # @return [RepositoryFinder] a new instance of RepositoryFinder
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#17
  def initialize(dependency:, credentials:, config_files: T.unsafe(nil)); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#23
  def dependency_urls; end

  private

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#219
  def add_config_file_credentials(sources:, doc:); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#259
  def auth_header_for_token(token); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#80
  def base_url_from_v3_metadata(metadata); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#44
  def build_url_for_details(repo_details); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#94
  def build_v2_url(response, repo_details); end

  # @raise [PrivateSourceAuthenticationFailure]
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#114
  def check_repo_response(response, details); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#146
  def config_file_repositories; end

  # Returns the value of attribute config_files.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#29
  def config_files; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#139
  def credential_repositories; end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#29
  def credentials; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#192
  def default_repository_details; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#29
  def dependency; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#205
  def disabled_sources(doc); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#31
  def find_dependency_urls; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#73
  def get_repo_metadata(repo_details); end

  # @raise [PrivateSourceTimedOut]
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#121
  def handle_timeout(repo_metadata_url:); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#127
  def known_repositories; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#253
  def remove_wrapping_zero_width_chars(string); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#153
  def repos_from_config_file(config_file); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#87
  def search_url_from_v3_metadata(metadata); end
end

# source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#15
Dependabot::Nuget::UpdateChecker::RepositoryFinder::DEFAULT_REPOSITORY_API_KEY = T.let(T.unsafe(nil), String)

# source://dependabot-nuget//lib/dependabot/nuget/update_checker/repository_finder.rb#14
Dependabot::Nuget::UpdateChecker::RepositoryFinder::DEFAULT_REPOSITORY_URL = T.let(T.unsafe(nil), String)

# source://dependabot-nuget//lib/dependabot/nuget/update_checker/requirements_updater.rb#15
class Dependabot::Nuget::UpdateChecker::RequirementsUpdater
  # @return [RequirementsUpdater] a new instance of RequirementsUpdater
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/requirements_updater.rb#16
  def initialize(requirements:, latest_version:, source_details:); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/requirements_updater.rb#24
  def updated_requirements; end

  private

  # Returns the value of attribute latest_version.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/requirements_updater.rb#55
  def latest_version; end

  # Returns the value of attribute requirements.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/requirements_updater.rb#55
  def requirements; end

  # Returns the value of attribute source_details.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/requirements_updater.rb#55
  def source_details; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/requirements_updater.rb#61
  def update_wildcard_requirement(req_string); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/requirements_updater.rb#75
  def updated_source; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/requirements_updater.rb#57
  def version_class; end
end

# source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#16
class Dependabot::Nuget::UpdateChecker::VersionFinder
  # @return [VersionFinder] a new instance of VersionFinder
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#21
  def initialize(dependency:, dependency_files:, credentials:, ignored_versions:, security_advisories:, raise_on_ignored: T.unsafe(nil)); end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#61
  def credentials; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#61
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#61
  def dependency_files; end

  # Returns the value of attribute ignored_versions.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#61
  def ignored_versions; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#32
  def latest_version_details; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#42
  def lowest_security_fix_version_details; end

  # Returns the value of attribute security_advisories.
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#61
  def security_advisories; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#57
  def versions; end

  private

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#125
  def available_v2_versions; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#105
  def available_v3_versions; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#144
  def dependency_details_from_v2_entry(entry); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#292
  def dependency_urls; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#324
  def excon_options; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#220
  def fetch_paginated_v2_nuget_listings(url_details, results = T.unsafe(nil)); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#243
  def fetch_v2_next_link_href(xml_body); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#273
  def fetch_versions_from_search_url(repository_details); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#73
  def filter_ignored_versions(possible_versions); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#91
  def filter_lower_versions(possible_versions); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#66
  def filter_prereleases(possible_versions); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#301
  def nuget_configs; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#99
  def parse_requirement_string(string); end

  # @return [Boolean]
  #
  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#165
  def related_to_current_pre?(version); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#318
  def remove_wrapping_zero_width_chars(string); end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#314
  def requirement_class; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#306
  def sanitized_name; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#203
  def v2_nuget_listings; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#189
  def v3_nuget_listings; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#310
  def version_class; end

  # source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#255
  def versions_for_v3_repository(repository_details); end
end

# source://dependabot-nuget//lib/dependabot/nuget/update_checker/version_finder.rb#19
Dependabot::Nuget::UpdateChecker::VersionFinder::NUGET_RANGE_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-nuget//lib/dependabot/nuget/version.rb#13
class Dependabot::Nuget::Version < ::Dependabot::Version
  # @return [Version] a new instance of Version
  #
  # source://dependabot-nuget//lib/dependabot/nuget/version.rb#23
  def initialize(version); end

  # source://dependabot-nuget//lib/dependabot/nuget/version.rb#38
  def <=>(other); end

  # source://dependabot-nuget//lib/dependabot/nuget/version.rb#85
  def compare_dot_separated_part(lhs, rhs); end

  # source://dependabot-nuget//lib/dependabot/nuget/version.rb#53
  def compare_prerelease_part(other); end

  # source://dependabot-nuget//lib/dependabot/nuget/version.rb#45
  def compare_release(other); end

  # source://dependabot-nuget//lib/dependabot/nuget/version.rb#34
  def inspect; end

  # source://dependabot-nuget//lib/dependabot/nuget/version.rb#30
  def to_s; end

  class << self
    # @return [Boolean]
    #
    # source://dependabot-nuget//lib/dependabot/nuget/version.rb#17
    def correct?(version); end
  end
end

# source://dependabot-nuget//lib/dependabot/nuget/version.rb#15
Dependabot::Nuget::Version::ANCHORED_VERSION_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://dependabot-nuget//lib/dependabot/nuget/version.rb#14
Dependabot::Nuget::Version::VERSION_PATTERN = T.let(T.unsafe(nil), String)
