# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `dependabot-npm_and_yarn` gem.
# Please instead update this file by running `bin/tapioca gem dependabot-npm_and_yarn`.

# JavaScript pre-release versions use 1.0.1-rc1 syntax, which Gem::Version
# converts into 1.0.1.pre.rc1. We override the `to_s` method to stop that
# alteration.
#
# See https://semver.org/ for details of node's version syntax.
#
# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#4
module Dependabot
  class << self
    # source://dependabot-common/0.234.0/lib/dependabot/logger.rb#7
    def logger; end

    # source://dependabot-common/0.234.0/lib/dependabot/logger.rb#11
    def logger=(logger); end
  end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#5
module Dependabot::NpmAndYarn; end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#12
class Dependabot::NpmAndYarn::DependencyFilesFilterer
  # @return [DependencyFilesFilterer] a new instance of DependencyFilesFilterer
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#13
  def initialize(dependency_files:, updated_dependencies:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#22
  def files_requiring_update; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#31
  def package_files_requiring_update; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#18
  def paths_requiring_update_check; end

  private

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#40
  def dependency_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#51
  def dependency_manifest_requirements; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#42
  def fetch_paths_requiring_update_check; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#118
  def lockfile?(file); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#106
  def lockfile_dependencies(lockfile); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#83
  def lockfiles; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#114
  def manifest?(file); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#58
  def package_required_lockfile?(lockfile); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#90
  def parsed_root_package_json; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#76
  def root_lockfile; end

  # Returns the value of attribute updated_dependencies.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#40
  def updated_dependencies; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#98
  def updated_dependencies_in_lockfile?(lockfile); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/dependency_files_filterer.rb#66
  def workspaces_lockfile?(lockfile); end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#16
class Dependabot::NpmAndYarn::FileFetcher < ::Dependabot::FileFetchers::Base
  # Overridden to pull any yarn data or plugins which may be stored with Git LFS.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#39
  def clone_repo_contents; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#56
  def ecosystem_versions; end

  private

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#564
  def build_unfetchable_deps(unfetchable_deps); end

  # Re-write the glob name to the targeted dependency name (which is used
  # in the lockfile), for example "parent-package/**/sub-dep/target-dep" >
  # "target-dep"
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#404
  def convert_dependency_path_to_name(path, value); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#72
  def fetch_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#419
  def fetch_lerna_packages; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#435
  def fetch_lerna_packages_from_path(path); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#505
  def fetch_package_json_if_present(workspace); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#427
  def fetch_pnpm_workspace_package_jsons; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#411
  def fetch_workspace_package_jsons; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#458
  def find_directories(glob); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#182
  def guess_pnpm_version; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#170
  def guess_yarn_version; end

  # If every entry in the lockfile uses the same registry, we can infer
  # that there is a global .npmrc file, so add it here as if it were in the repo.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#120
  def inferred_npmrc; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#110
  def lerna_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#272
  def lerna_json; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#282
  def lerna_packages; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#476
  def matching_paths(glob, paths); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#85
  def npm_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#220
  def npmrc; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#192
  def package_json; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#196
  def package_lock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#188
  def package_manager; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#578
  def parsed_lerna_json; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#522
  def parsed_package_json; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#528
  def parsed_package_lock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#544
  def parsed_pnpm_workspace_yaml; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#536
  def parsed_shrinkwrap; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#291
  def path_dependencies(fetched_files); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#330
  def path_dependency_details(fetched_files); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#354
  def path_dependency_details_from_manifest(file); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#393
  def path_dependency_details_from_npm_lockfile(parsed_lockfile); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#102
  def pnpm_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#208
  def pnpm_lock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#176
  def pnpm_version; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#286
  def pnpm_workspace_package_jsons; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#266
  def pnpm_workspace_yaml; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#487
  def recursive_find_directories(glob, prefix = T.unsafe(nil)); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#214
  def shrinkwrap; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#552
  def skip_package_lock?; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#558
  def skip_pnpm_lock?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#278
  def workspace_package_jsons; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#446
  def workspace_paths(workspace_object); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#94
  def yarn_files; end

  # The packages/!(not-this-package) syntax is unique to Yarn
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#518
  def yarn_ignored_glob(glob); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#202
  def yarn_lock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#164
  def yarn_version; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#240
  def yarnrc; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#260
  def yarnrc_yml; end

  class << self
    # @return [Boolean]
    #
    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#30
    def required_files_in?(filenames); end

    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#34
    def required_files_message; end
  end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#28
Dependabot::NpmAndYarn::FileFetcher::DEFAULT_NPM_REGISTRY = T.let(T.unsafe(nil), String)

# Npm always prefixes file paths in the lockfile "version" with "file:"
# even when a naked path is used (e.g. "../dep")
#
# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#21
Dependabot::NpmAndYarn::FileFetcher::NPM_PATH_DEPENDENCY_STARTS = T.let(T.unsafe(nil), Array)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#27
Dependabot::NpmAndYarn::FileFetcher::PATH_DEPENDENCY_CLEAN_REGEX = T.let(T.unsafe(nil), Regexp)

# "link:" is only supported by Yarn but is interchangeable with "file:"
# when it specifies a path. Only include Yarn "link:"'s that start with a
# path and ignore symlinked package names that have been registered with
# "yarn link", e.g. "link:react"
#
# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher.rb#26
Dependabot::NpmAndYarn::FileFetcher::PATH_DEPENDENCY_STARTS = T.let(T.unsafe(nil), Array)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#12
class Dependabot::NpmAndYarn::FileFetcher::PathDependencyBuilder
  # @return [PathDependencyBuilder] a new instance of PathDependencyBuilder
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#13
  def initialize(dependency_name:, path:, directory:, package_lock:, yarn_lock:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#22
  def dependency_file; end

  private

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#57
  def build_path_dep_content(dependency_name); end

  # Returns the value of attribute dependency_name.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#35
  def dependency_name; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#48
  def details_from_npm_lock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#38
  def details_from_yarn_lock; end

  # Returns the value of attribute directory.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#35
  def directory; end

  # The path back to the root lockfile
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#139
  def inverted_path; end

  # Returns the value of attribute package_lock.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#35
  def package_lock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#113
  def parsed_package_lock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#121
  def parsed_yarn_lock; end

  # Returns the value of attribute path.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#35
  def path; end

  # If an unfetchable path dependency itself has path dependencies
  # then the paths in the yarn.lock for them will be absolute, not
  # relative. Worse, they may point to the user's local cache.
  # We work around this by constructing a relative path to the
  # (second-level) path dependencies.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#89
  def replace_yarn_lock_file_paths(dependencies_hash); end

  # Returns the value of attribute yarn_lock.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_fetcher/path_dependency_builder.rb#35
  def yarn_lock; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#20
class Dependabot::NpmAndYarn::FileParser < ::Dependabot::FileParsers::Base
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#37
  def parse; end

  private

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#143
  def alias_package?(requirement); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#161
  def aliased_package_name?(name); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#94
  def build_dependency(file:, type:, name:, requirement:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#126
  def check_required_files; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#197
  def commit_sha?(string); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#234
  def exact_version_for(requirement); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#189
  def git_revision_for(lockfile_details); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#266
  def git_source_for(requirement); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#151
  def git_url?(requirement); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#155
  def git_url_with_semver?(requirement); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#130
  def ignore_requirement?(requirement); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#139
  def local_path?(requirement); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#90
  def lockfile_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#84
  def lockfile_parser; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#226
  def lockfile_version_for(lockfile_details); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#58
  def manifest_dependencies; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#147
  def non_git_url?(requirement); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#337
  def package_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#289
  def registry_source_for(resolved_url, name); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#358
  def requirement_class; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#259
  def requirement_for(requirement); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#230
  def semver_version_for(version); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#243
  def source_for(name, requirement, lockfile_details); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#311
  def url_for_relevant_cred(resolved_url); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#354
  def version_class; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#170
  def version_for(requirement, lockfile_details); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#203
  def version_from_git_revision(requirement, git_revision); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#165
  def workspace_package_names; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#24
Dependabot::NpmAndYarn::FileParser::DEPENDENCY_TYPES = T.let(T.unsafe(nil), Array)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser.rb#26
Dependabot::NpmAndYarn::FileParser::GIT_URL_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/json_lock.rb#11
class Dependabot::NpmAndYarn::FileParser::JsonLock
  # @return [JsonLock] a new instance of JsonLock
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/json_lock.rb#12
  def initialize(dependency_file); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/json_lock.rb#22
  def dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/json_lock.rb#26
  def details(dependency_name, _requirement, manifest_name); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/json_lock.rb#16
  def parsed; end

  private

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/json_lock.rb#76
  def node_modules_path(manifest_name, dependency_name); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/json_lock.rb#40
  def recursively_fetch_dependencies(object_with_dependencies); end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/lockfile_parser.rb#11
class Dependabot::NpmAndYarn::FileParser::LockfileParser
  # @return [LockfileParser] a new instance of LockfileParser
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/lockfile_parser.rb#16
  def initialize(dependency_files:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/lockfile_parser.rb#38
  def lockfile_details(dependency_name:, requirement:, manifest_name:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/lockfile_parser.rb#34
  def parse; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/lockfile_parser.rb#20
  def parse_set; end

  private

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/lockfile_parser.rb#50
  def dependency_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/lockfile_parser.rb#68
  def lockfile_for(file); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/lockfile_parser.rb#79
  def package_locks; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/lockfile_parser.rb#64
  def parsed_lockfile(file); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/lockfile_parser.rb#85
  def pnpm_locks; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/lockfile_parser.rb#52
  def potential_lockfiles_for_manifest(manifest_filename); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/lockfile_parser.rb#97
  def shrinkwraps; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/lockfile_parser.rb#103
  def version_class; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/lockfile_parser.rb#91
  def yarn_locks; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/pnpm_lock.rb#9
class Dependabot::NpmAndYarn::FileParser::PnpmLock
  # @return [PnpmLock] a new instance of PnpmLock
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/pnpm_lock.rb#10
  def initialize(dependency_file); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/pnpm_lock.rb#28
  def dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/pnpm_lock.rb#55
  def details(dependency_name, requirement, _manifest_name); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/pnpm_lock.rb#14
  def parsed; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/yarn_lock.rb#11
class Dependabot::NpmAndYarn::FileParser::YarnLock
  # @return [YarnLock] a new instance of YarnLock
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/yarn_lock.rb#12
  def initialize(dependency_file); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/yarn_lock.rb#30
  def dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/yarn_lock.rb#53
  def details(dependency_name, requirement, _manifest_name); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/yarn_lock.rb#16
  def parsed; end

  private

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/yarn_lock.rb#71
  def alias_package?(requirement); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_parser/yarn_lock.rb#75
  def workspace_package?(requirement); end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#13
class Dependabot::NpmAndYarn::FileUpdater < ::Dependabot::FileUpdaters::Base
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#40
  def updated_dependency_files; end

  private

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#128
  def check_required_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#132
  def error_context(updated_files:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#113
  def filtered_dependency_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#86
  def install_state_path; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#99
  def install_state_updater; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#164
  def package_files; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#179
  def package_lock_changed?(package_lock); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#140
  def package_locks; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#106
  def pnp_updater; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#175
  def pnpm_lock_changed?(pnpm_lock); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#260
  def pnpm_lockfile_updater; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#152
  def pnpm_locks; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#183
  def shrinkwrap_changed?(shrinkwrap); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#158
  def shrinkwraps; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#270
  def updated_lockfile_content(file); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#196
  def updated_lockfiles; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#187
  def updated_manifest_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#281
  def updated_package_json_content(file); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#244
  def updated_pnpm_lock_content(pnpm_lock); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#238
  def updated_yarn_lock_content(yarn_lock); end

  # Dynamically fetch the vendor cache folder from yarn
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#80
  def vendor_cache_dir; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#66
  def vendor_updated_files(updated_files); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#92
  def vendor_updater; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#171
  def yarn_lock_changed?(yarn_lock); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#250
  def yarn_lockfile_updater; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#146
  def yarn_locks; end

  class << self
    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#30
    def updated_files_regex; end
  end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#19
class Dependabot::NpmAndYarn::FileUpdater::NoChangeError < ::StandardError
  # @return [NoChangeError] a new instance of NoChangeError
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#20
  def initialize(message:, error_context:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater.rb#25
  def raven_context; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#17
class Dependabot::NpmAndYarn::FileUpdater::NpmLockfileUpdater
  # @return [NpmLockfileUpdater] a new instance of NpmLockfileUpdater
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#21
  def initialize(lockfile:, dependencies:, dependency_files:, credentials:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#28
  def updated_lockfile; end

  private

  # Returns the value of attribute credentials.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#36
  def credentials; end

  # Returns the value of attribute dependencies.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#36
  def dependencies; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#492
  def dependencies_in_error_message?(error_message); end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#36
  def dependency_files; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#310
  def dependency_in_lockfile?(dependency); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#304
  def dependency_in_package_json?(dependency); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#92
  def dependency_up_to_date?(dependency); end

  # Takes a JSON string and detects if it is spaces or tabs and how many
  # levels deep it is indented.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#551
  def detect_indentation(json); end

  # TODO: Add the raw updated requirement to the Dependency instance
  # instead of fishing it out of the updated package json, we need to do
  # this because we don't store the same requirement in
  # Dependency#requirements for git dependencies - see PackageJsonUpdater
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#231
  def flattenend_manifest_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#578
  def git_dependencies_to_lock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#620
  def git_ssh_requirements_to_swap; end

  # @raise [Dependabot::PrivateSourceAuthenticationFailure]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#458
  def handle_missing_package(package_name, error_message); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#320
  def handle_npm_updater_error(error); end

  # When a package.json version requirement is set to `latest`, npm will
  # always try to update these dependencies when doing an `npm install`,
  # regardless of lockfile version. Prevent any unrelated updates by
  # changing the version requirement to `*` while updating the lockfile.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#605
  def lock_deps_with_latest_reqs(content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#561
  def lock_git_deps(content); end

  # Returns the value of attribute lockfile.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#36
  def lockfile; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#850
  def lockfile_basename; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#83
  def lockfile_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#846
  def lockfile_directory; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#836
  def npm8?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#275
  def npm_install_args(dependency); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#808
  def npmrc_content; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#832
  def npmrc_disables_lockfile?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#882
  def package_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#865
  def package_json; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#824
  def package_json_preparer(content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#870
  def package_locks; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#854
  def parsed_lockfile; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#858
  def parsed_package_json; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#628
  def post_process_npm_lockfile(updated_lockfile_content); end

  # @raise [Dependabot::DependencyFileNotResolvable]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#442
  def raise_missing_lockfile_version_resolvability_error(error_message); end

  # @raise [Dependabot::DependencyFileNotResolvable]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#435
  def raise_resolvability_error(error_message); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#705
  def remove_lockfile_packages_name_attribute(current_name, updated_lockfile_content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#750
  def replace_locked_git_dependencies(updated_lockfile_content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#690
  def replace_lockfile_name_attribute(current_name, original_name, updated_lockfile_content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#697
  def replace_lockfile_packages_name_attribute(current_name, original_name, updated_lockfile_content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#654
  def replace_project_name(updated_lockfile_content, parsed_updated_lockfile_content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#740
  def replace_swapped_git_ssh_requirements(updated_lockfile_content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#774
  def replace_tarball_urls(updated_lockfile_content); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#476
  def resolvable_before_update?; end

  # NOTE: This is a workaround to "sync" what's in package.json
  # requirements and the `packages.""` entry in npm 8 v2 lockfiles. These
  # get out of sync because we lock git dependencies (that are not being
  # updated) to a specific sha to prevent unrelated updates and the way we
  # invoke the `npm install` cli, where we might tell npm to install a
  # specific versionm e.g. `npm install eslint@1.1.8` but we keep the
  # `package.json` requirement for eslint at `^1.0.0`, in which case we
  # need to copy this from the manifest to the lockfile after the update
  # has finished.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#719
  def restore_locked_package_dependencies(updated_lockfile_content, parsed_updated_lockfile_content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#665
  def restore_packages_name(updated_lockfile_content, parsed_updated_lockfile_content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#115
  def run_current_npm_update; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#217
  def run_npm8_subdependency_updater(sub_dependencies:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#175
  def run_npm8_top_level_updater(top_level_dependencies:); end

  # Runs `npm install` with `--package-lock-only` flag to update the
  # lockfiile.
  #
  # Other npm flags:
  # - `--force` ignores checks for platform (os, cpu) and engines
  # - `--dry-run=false` the updater sets a global .npmrc with `dry-run: true`
  #   to work around an issue in npm 6, we don't want that here
  # - `--ignore-scripts` disables prepare and prepack scripts which are
  #   run when installing git dependencies
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#249
  def run_npm_install_lockfile_only(*install_args); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#205
  def run_npm_subdependency_updater(sub_dependencies:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#159
  def run_npm_top_level_updater(top_level_dependencies:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#146
  def run_npm_updater(top_level_dependencies:, sub_dependencies:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#119
  def run_previous_npm_update; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#842
  def sanitize_package_name(package_name); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#876
  def shrinkwraps; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#73
  def sub_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#791
  def tarball_urls; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#69
  def top_level_dependencies; end

  # NOTE: Prevent changes to npm 6 lockfiles when the dependency has been
  # required in a package.json outside the current folder (e.g. lerna
  # proj). npm 7 introduces workspace support so we explitly want to
  # update the root lockfile and check if the dependency is in the
  # lockfile
  #
  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#109
  def top_level_dependency_update_not_required?(dependency); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#77
  def updatable_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#54
  def updated_lockfile_content; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#815
  def updated_package_json_content(file); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#223
  def updated_version_requirement_for_dependency(dependency); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#534
  def write_lockfiles; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#501
  def write_temporary_dependency_files(update_package_json: T.unsafe(nil)); end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#39
Dependabot::NpmAndYarn::FileUpdater::NpmLockfileUpdater::FORBIDDEN_GIT = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#40
Dependabot::NpmAndYarn::FileUpdater::NpmLockfileUpdater::FORBIDDEN_PACKAGE = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#41
Dependabot::NpmAndYarn::FileUpdater::NpmLockfileUpdater::FORBIDDEN_PACKAGE_403 = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#44
Dependabot::NpmAndYarn::FileUpdater::NpmLockfileUpdater::INVALID_PACKAGE = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#43
Dependabot::NpmAndYarn::FileUpdater::NpmLockfileUpdater::MISSING_PACKAGE = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#52
Dependabot::NpmAndYarn::FileUpdater::NpmLockfileUpdater::NPM6_MISSING_GIT_REF = T.let(T.unsafe(nil), Regexp)

# TODO: look into fixing this in npm, seems like a bug in the git
# downloader introduced in npm 7
#
# NOTE: error message returned from arborist/npm 8 when trying to
# fetching a invalid/non-existent git ref
#
# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#51
Dependabot::NpmAndYarn::FileUpdater::NpmLockfileUpdater::NPM8_MISSING_GIT_REF = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npm_lockfile_updater.rb#38
Dependabot::NpmAndYarn::FileUpdater::NpmLockfileUpdater::UNREACHABLE_GIT = T.let(T.unsafe(nil), Regexp)

# Build a .npmrc file from the lockfile content, credentials, and any
# committed .npmrc
# We should refactor this to use UpdateChecker::RegistryFinder
#
# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#12
class Dependabot::NpmAndYarn::FileUpdater::NpmrcBuilder
  # @return [NpmrcBuilder] a new instance of NpmrcBuilder
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#20
  def initialize(dependency_files:, credentials:, dependencies: T.unsafe(nil)); end

  # PROXY WORK
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#27
  def npmrc_content; end

  # PROXY WORK
  # Yarn allows registries to be defined either in an .npmrc or .yarnrc
  # so we need to parse both files for registry keys
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#43
  def yarnrc_content; end

  private

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#58
  def build_npmrc_content_from_lockfile; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#196
  def build_npmrc_from_yarnrc; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#69
  def build_yarnrc_content_from_lockfile; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#208
  def build_yarnrc_from_yarnrc; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#170
  def complete_npmrc_from_credentials; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#184
  def complete_yarnrc_from_credentials; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#220
  def credential_lines_for_npmrc; end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#56
  def credentials; end

  # Returns the value of attribute dependencies.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#56
  def dependencies; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#56
  def dependency_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#134
  def dependency_urls; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#78
  def global_registry; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#302
  def npmrc_file; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#102
  def npmrc_global_registry_auth_line; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#250
  def npmrc_scoped_registries; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#316
  def package_lock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#298
  def parsed_package_lock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#294
  def registry_credentials; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#267
  def registry_scopes(registry); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#312
  def yarn_lock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#307
  def yarnrc_file; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#119
  def yarnrc_global_registry_auth_line; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#258
  def yarnrc_scoped_registries; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#13
Dependabot::NpmAndYarn::FileUpdater::NpmrcBuilder::CENTRAL_REGISTRIES = T.let(T.unsafe(nil), Array)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/npmrc_builder.rb#18
Dependabot::NpmAndYarn::FileUpdater::NpmrcBuilder::SCOPED_REGISTRY = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_preparer.rb#10
class Dependabot::NpmAndYarn::FileUpdater::PackageJsonPreparer
  # @return [PackageJsonPreparer] a new instance of PackageJsonPreparer
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_preparer.rb#11
  def initialize(package_json_content:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_preparer.rb#15
  def prepared_content; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_preparer.rb#55
  def remove_invalid_characters(content); end

  # A bug prevents Yarn recognising that a directory is part of a
  # workspace if it is specified with a `./` prefix.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_preparer.rb#36
  def remove_workspace_path_prefixes(content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_preparer.rb#23
  def replace_ssh_sources(content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_preparer.rb#62
  def swapped_ssh_requirements; end

  private

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_preparer.rb#70
  def git_ssh_requirements_to_swap; end

  # Returns the value of attribute package_json_content.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_preparer.rb#68
  def package_json_content; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#9
class Dependabot::NpmAndYarn::FileUpdater::PackageJsonUpdater
  # @return [PackageJsonUpdater] a new instance of PackageJsonUpdater
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#10
  def initialize(package_json:, dependencies:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#15
  def updated_package_json; end

  private

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#235
  def closing_bracket_index(string); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#143
  def declaration_line(dependency_name:, dependency_req:, content:); end

  # Returns the value of attribute dependencies.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#23
  def dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#63
  def new_requirements(dependency); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#57
  def old_requirement(dependency, new_requirement); end

  # Returns the value of attribute package_json.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#23
  def package_json; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#161
  def replacement_declaration_line(original_line:, old_req:, new_req:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#193
  def update_git_semver_requirement(original_line:, old_req:, new_req:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#82
  def update_package_json_declaration(package_json_content:, new_req:, dependency_name:, old_req:); end

  # For full details on how Yarn resolutions work, see
  # https://github.com/yarnpkg/rfcs/blob/master/implemented/
  # 0000-selective-versions-resolutions.md
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#109
  def update_package_json_resolutions(package_json_content:, new_req:, dependency:, old_req:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#209
  def update_package_json_sections(sections, content, old_line, new_line); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#25
  def updated_package_json_content; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/package_json_updater.rb#67
  def updated_requirements(dependency); end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#11
class Dependabot::NpmAndYarn::FileUpdater::PnpmLockfileUpdater
  # @return [PnpmLockfileUpdater] a new instance of PnpmLockfileUpdater
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#15
  def initialize(dependencies:, dependency_files:, repo_contents_path:, credentials:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#22
  def updated_pnpm_lock_content(pnpm_lock); end

  private

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#147
  def base_dir; end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#34
  def credentials; end

  # Returns the value of attribute dependencies.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#34
  def dependencies; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#34
  def dependency_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#83
  def handle_pnpm_lock_updater_error(error, pnpm_lock); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#73
  def lockfile_dependencies(lockfile); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#126
  def npmrc_content(pnpm_lock); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#151
  def npmrc_file; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#143
  def package_files; end

  # @raise [PrivateSourceAuthenticationFailure]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#105
  def raise_missing_package_error(package_name, _error_message, pnpm_lock); end

  # @raise [Dependabot::DependencyFileNotResolvable]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#98
  def raise_resolvability_error(error_message, pnpm_lock); end

  # Returns the value of attribute repo_contents_path.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#34
  def repo_contents_path; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#67
  def run_pnpm_install; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#40
  def run_pnpm_update(pnpm_lock:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#56
  def run_pnpm_updater; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#134
  def updated_package_json_content(file); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#118
  def write_final_package_json_files; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#37
Dependabot::NpmAndYarn::FileUpdater::PnpmLockfileUpdater::INVALID_REQUIREMENT = T.let(T.unsafe(nil), String)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#36
Dependabot::NpmAndYarn::FileUpdater::PnpmLockfileUpdater::IRRESOLVABLE_PACKAGE = T.let(T.unsafe(nil), String)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/pnpm_lockfile_updater.rb#38
Dependabot::NpmAndYarn::FileUpdater::PnpmLockfileUpdater::MISSING_PACKAGE = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#18
class Dependabot::NpmAndYarn::FileUpdater::YarnLockfileUpdater
  # @return [YarnLockfileUpdater] a new instance of YarnLockfileUpdater
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#23
  def initialize(dependencies:, dependency_files:, repo_contents_path:, credentials:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#30
  def updated_yarn_lock_content(yarn_lock); end

  private

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#369
  def clean_npmrc_in_path(yarn_lock); end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#42
  def credentials; end

  # Returns the value of attribute dependencies.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#42
  def dependencies; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#332
  def dependencies_in_error_message?(message); end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#42
  def dependency_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#394
  def git_ssh_requirements_to_swap; end

  # @raise [PrivateSourceAuthenticationFailure]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#439
  def handle_missing_package(package_name, error_message, yarn_lock); end

  # @raise [PrivateSourceTimedOut]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#465
  def handle_timeout(error_message, yarn_lock); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#225
  def handle_yarn_lock_updater_error(error, yarn_lock); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#429
  def lockfile_dependencies(lockfile); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#481
  def npmrc_content; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#503
  def npmrc_disables_lockfile?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#550
  def npmrc_file; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#542
  def package_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#495
  def package_json_preparer(content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#402
  def post_process_yarn_lockfile(lockfile_content); end

  # @raise [Dependabot::DependencyFileNotResolvable]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#458
  def raise_resolvability_error(error_message, yarn_lock); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#425
  def remove_integrity_lines(content); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#421
  def remove_integrity_lines?; end

  # Returns the value of attribute repo_contents_path.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#42
  def repo_contents_path; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#169
  def requirements_changed?(dependency_name); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#212
  def requirements_for_path(requirements, path); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#313
  def resolvable_before_update?(yarn_lock); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#72
  def run_current_yarn_update(path:, yarn_lock:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#88
  def run_previous_yarn_update(path:, yarn_lock:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#174
  def run_yarn_berry_subdependency_updater(yarn_lock:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#147
  def run_yarn_berry_top_level_updater(top_level_dependency_updates:, yarn_lock:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#203
  def run_yarn_subdependency_updater(yarn_lock:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#192
  def run_yarn_top_level_updater(top_level_dependency_updates:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#107
  def run_yarn_updater(path:, yarn_lock:, top_level_dependency_updates:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#532
  def sanitize_package_name(package_name); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#52
  def sub_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#48
  def top_level_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#488
  def updated_package_json_content(file); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#56
  def updated_yarn_lock(yarn_lock); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#387
  def write_lockfiles; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#341
  def write_temporary_dependency_files(yarn_lock, update_package_json: T.unsafe(nil)); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#188
  def yarn_berry_args; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#536
  def yarn_locks; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#525
  def yarnrc_content; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#546
  def yarnrc_file; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#507
  def yarnrc_specifies_private_reg?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#558
  def yarnrc_yml_content; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#554
  def yarnrc_yml_file; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#46
Dependabot::NpmAndYarn::FileUpdater::YarnLockfileUpdater::INVALID_PACKAGE = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#45
Dependabot::NpmAndYarn::FileUpdater::YarnLockfileUpdater::TIMEOUT_FETCHING_PACKAGE = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/file_updater/yarn_lockfile_updater.rb#44
Dependabot::NpmAndYarn::FileUpdater::YarnLockfileUpdater::UNREACHABLE_GIT = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#6
module Dependabot::NpmAndYarn::Helpers
  class << self
    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#125
    def dependencies_with_all_versions_metadata(dependency_set); end

    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#56
    def fetch_pnpm_major_version; end

    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#51
    def fetch_yarn_major_version; end

    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#28
    def fetch_yarnrc_yml_value(key, default_value); end

    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#7
    def npm_version(lockfile_content); end

    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#11
    def npm_version_numeric(lockfile_content); end

    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#47
    def pnpm_major_version; end

    # Run a single yarn command returning stdout/stderr
    #
    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#120
    def run_yarn_command(command, fingerprint: T.unsafe(nil)); end

    # Run any number of yarn commands while ensuring that `enableScripts` is
    # set to false. Yarn commands should _not_ be ran outside of this helper
    # to ensure that postinstall scripts are never executed, as they could
    # contain malicious code.
    #
    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#114
    def run_yarn_commands(*commands); end

    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#86
    def setup_yarn_berry; end

    # @return [Boolean]
    #
    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#36
    def yarn_berry?(yarn_lock); end

    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#70
    def yarn_berry_args; end

    # @return [Boolean]
    #
    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#82
    def yarn_berry_skip_build?; end

    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#43
    def yarn_major_version; end

    # @return [Boolean]
    #
    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#65
    def yarn_offline_cache?; end

    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#20
    def yarn_version_numeric(yarn_lock); end

    # @return [Boolean]
    #
    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/helpers.rb#61
    def yarn_zero_install?; end
  end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#15
class Dependabot::NpmAndYarn::MetadataFinder < ::Dependabot::MetadataFinders::Base
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#16
  def homepage_url; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#25
  def maintainer_changes; end

  private

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#148
  def all_version_listings; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#199
  def auth_token; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#192
  def dependency_registry; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#174
  def dependency_url; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#132
  def find_source_from_git_url; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#71
  def find_source_from_registry; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#125
  def get_directory(details); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#103
  def get_source(details); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#114
  def get_url(details); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#137
  def latest_version_listing; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#37
  def look_up_source; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#95
  def new_source; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#206
  def non_standard_registry?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#157
  def npm_listing; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#49
  def npm_releaser; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#55
  def previous_releasers; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/metadata_finder.rb#186
  def registry_auth_headers; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/native_helpers.rb#6
module Dependabot::NpmAndYarn::NativeHelpers
  class << self
    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/native_helpers.rb#7
    def helper_path; end

    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/native_helpers.rb#11
    def native_helpers_root; end

    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/native_helpers.rb#18
    def run_npm8_subdependency_update_command(dependency_names); end
  end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_manager.rb#6
class Dependabot::NpmAndYarn::PackageManager
  # @return [PackageManager] a new instance of PackageManager
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_manager.rb#7
  def initialize(package_json); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_manager.rb#11
  def locked_version(name); end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_name.rb#6
class Dependabot::NpmAndYarn::PackageName
  # @raise [InvalidPackageName]
  # @return [PackageName] a new instance of PackageName
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_name.rb#34
  def initialize(string); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_name.rb#58
  def <=>(other); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_name.rb#50
  def eql?(other); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_name.rb#54
  def hash; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_name.rb#62
  def library_name; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_name.rb#42
  def to_s; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_name.rb#76
  def types_package_name; end

  private

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_name.rb#89
  def scoped?; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_name.rb#93
  def types_package?; end
end

# multi-line/case-insensitive
#
# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_name.rb#32
class Dependabot::NpmAndYarn::PackageName::InvalidPackageName < ::StandardError; end

# NPM package naming rules are defined by the following projects:
# - https://github.com/npm/npm-user-validate
# - https://github.com/npm/validate-npm-package-name
#
# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_name.rb#10
Dependabot::NpmAndYarn::PackageName::PACKAGE_NAME_REGEX = T.let(T.unsafe(nil), Regexp)

# multi-line/case-insensitive
#
# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/package_name.rb#24
Dependabot::NpmAndYarn::PackageName::TYPES_PACKAGE_NAME_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/requirement.rb#9
class Dependabot::NpmAndYarn::Requirement < ::Gem::Requirement
  # @return [Requirement] a new instance of Requirement
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/requirement.rb#50
  def initialize(*requirements); end

  private

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/requirement.rb#113
  def convert_caret_req(req_string); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/requirement.rb#84
  def convert_hyphen_req(req_string); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/requirement.rb#60
  def convert_js_constraint_to_ruby_constraint(req_string); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/requirement.rb#77
  def convert_tilde_req(req_string); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/requirement.rb#103
  def ruby_range(req_string); end

  class << self
    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/requirement.rb#21
    def parse(obj); end

    # Returns an array of requirements. At least one requirement from the
    # returned array must be satisfied for a version to be valid.
    #
    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/requirement.rb#37
    def requirements_array(requirement_string); end
  end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/requirement.rb#10
Dependabot::NpmAndYarn::Requirement::AND_SEPARATOR = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/requirement.rb#12
Dependabot::NpmAndYarn::Requirement::LATEST_REQUIREMENT = T.let(T.unsafe(nil), String)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/requirement.rb#11
Dependabot::NpmAndYarn::Requirement::OR_SEPARATOR = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/requirement.rb#19
Dependabot::NpmAndYarn::Requirement::PATTERN = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/requirement.rb#18
Dependabot::NpmAndYarn::Requirement::PATTERN_RAW = T.let(T.unsafe(nil), String)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/sub_dependency_files_filterer.rb#14
class Dependabot::NpmAndYarn::SubDependencyFilesFilterer
  # @return [SubDependencyFilesFilterer] a new instance of SubDependencyFilesFilterer
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/sub_dependency_files_filterer.rb#15
  def initialize(dependency_files:, updated_dependencies:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/sub_dependency_files_filterer.rb#20
  def files_requiring_update; end

  private

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/sub_dependency_files_filterer.rb#36
  def dependency_files; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/sub_dependency_files_filterer.rb#50
  def lockfile?(file); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/sub_dependency_files_filterer.rb#38
  def lockfile_dependencies(lockfile); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/sub_dependency_files_filterer.rb#46
  def lockfiles; end

  # Returns the value of attribute updated_dependencies.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/sub_dependency_files_filterer.rb#36
  def updated_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/sub_dependency_files_filterer.rb#59
  def version_class; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#12
class Dependabot::NpmAndYarn::UpdateChecker < ::Dependabot::UpdateCheckers::Base
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#118
  def conflicting_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#80
  def latest_resolvable_previous_version(updated_version); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#44
  def latest_resolvable_version; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#72
  def latest_resolvable_version_with_no_unlock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#35
  def latest_version; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#61
  def lowest_resolvable_security_fix_version; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#57
  def lowest_security_fix_version; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#106
  def requirements_unlocked_or_can_be?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#110
  def requirements_update_strategy; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#21
  def up_to_date?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#84
  def updated_requirements; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#31
  def vulnerable?; end

  private

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#233
  def build_updated_dependency(update_details); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#183
  def conflicting_updated_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#411
  def dependency_source_details; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#428
  def git_commit_checker; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#351
  def git_dependency?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#355
  def latest_git_version_details; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#300
  def latest_released_version; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#257
  def latest_resolvable_transitive_security_fix_version_with_no_unlock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#267
  def latest_resolvable_version_with_no_unlock_for_git_dependency; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#305
  def latest_version_details; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#314
  def latest_version_finder; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#290
  def latest_version_for_git_dependency; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#165
  def latest_version_resolvable_with_full_unlock?; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#395
  def library?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#415
  def original_source(updated_dependency); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#423
  def package_json; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#407
  def security_update?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#339
  def subdependency_version_resolver; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#223
  def top_level_dependency_lookup; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#175
  def updated_dependencies_after_full_unlock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#380
  def updated_source; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#326
  def version_resolver; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#141
  def vulnerability_audit; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#137
  def vulnerability_audit_performed?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker.rb#153
  def vulnerable_versions; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/conflicting_dependency_resolver.rb#17
class Dependabot::NpmAndYarn::UpdateChecker::ConflictingDependencyResolver
  # @return [ConflictingDependencyResolver] a new instance of ConflictingDependencyResolver
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/conflicting_dependency_resolver.rb#18
  def initialize(dependency_files:, credentials:); end

  # Finds any dependencies in the `yarn.lock` or `package-lock.json` that
  # have a subdependency on the given dependency that does not satisfly
  # the target_version.
  #
  # @param dependency [Dependabot::Dependency] the dependency to check
  # @param target_version [String] the version to check
  # @return [Array<Hash{String => String}]
  # * name [String] the blocking dependencies name
  # * version [String] the version of the blocking dependency
  # * requirement [String] the requirement on the target_dependency] Array<Hash{String => String}]
  #   * name [String] the blocking dependencies name
  #   * version [String] the version of the blocking dependency
  #   * requirement [String] the requirement on the target_dependency
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/conflicting_dependency_resolver.rb#33
  def conflicting_dependencies(dependency:, target_version:); end

  private

  # Returns the value of attribute credentials.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/conflicting_dependency_resolver.rb#68
  def credentials; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/conflicting_dependency_resolver.rb#68
  def dependency_files; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#10
class Dependabot::NpmAndYarn::UpdateChecker::DependencyFilesBuilder
  # @return [DependencyFilesBuilder] a new instance of DependencyFilesBuilder
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#11
  def initialize(dependency:, dependency_files:, credentials:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#70
  def lockfiles; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#74
  def package_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#34
  def package_locks; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#46
  def pnpm_locks; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#58
  def root_pnpm_lock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#52
  def root_yarn_lock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#64
  def shrinkwraps; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#17
  def write_temporary_dependency_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#40
  def yarn_locks; end

  private

  # Returns the value of attribute credentials.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#82
  def credentials; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#82
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#82
  def dependency_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#132
  def npmrc_content; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#126
  def prepared_package_json_content(file); end

  # Duplicated in NpmLockfileUpdater
  # Remove the dependency we want to update from the lockfile and let
  # yarn find the latest resolvable version and fix the lockfile
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#122
  def prepared_yarn_lockfile_content(content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#84
  def write_lock_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#143
  def yarnrc_content; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#139
  def yarnrc_file; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#101
  def yarnrc_specifies_private_reg?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#154
  def yarnrc_yml_content; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/dependency_files_builder.rb#150
  def yarnrc_yml_file; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#15
class Dependabot::NpmAndYarn::UpdateChecker::LatestVersionFinder
  # @return [LatestVersionFinder] a new instance of LatestVersionFinder
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#25
  def initialize(dependency:, credentials:, dependency_files:, ignored_versions:, security_advisories:, raise_on_ignored: T.unsafe(nil)); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#36
  def latest_version_from_registry; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#48
  def latest_version_with_no_unlock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#60
  def lowest_security_fix_version; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#82
  def possible_previous_versions_with_details; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#100
  def possible_versions(filter_ignored: T.unsafe(nil)); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#91
  def possible_versions_with_details(filter_ignored: T.unsafe(nil)); end

  private

  # @raise [RegistryError]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#312
  def check_npm_response(npm_response); end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#107
  def credentials; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#211
  def current_requirement_greater_than?(version); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#205
  def current_version_greater_than?(version); end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#107
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#107
  def dependency_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#358
  def dependency_registry; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#354
  def dependency_url; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#272
  def fetch_npm_details; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#288
  def fetch_npm_response; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#114
  def filter_ignored_versions(versions_array); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#135
  def filter_lower_versions(versions_array); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#126
  def filter_out_of_range_versions(versions_array); end

  # TODO: Remove need for me
  #
  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#401
  def git_dependency?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#376
  def ignore_requirements; end

  # Returns the value of attribute ignored_versions.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#107
  def ignored_versions; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#266
  def npm_details; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#388
  def npmrc_file; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#337
  def private_dependency_not_reachable?(npm_response); end

  # @raise [PrivateSourceTimedOut]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#330
  def raise_npm_details_error(error); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#362
  def registry_auth_headers; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#366
  def registry_finder; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#165
  def related_to_current_pre?(version); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#384
  def requirement_class; end

  # Returns the value of attribute security_advisories.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#107
  def security_advisories; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#185
  def specified_dist_tag_requirement?; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#110
  def valid_npm_details?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#380
  def version_class; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#249
  def version_endpoint_working?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#142
  def version_from_dist_tags; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#194
  def wants_latest_dist_tag?(latest_version); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#222
  def yanked?(version); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#392
  def yarnrc_file; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#396
  def yarnrc_yml_file; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#16
class Dependabot::NpmAndYarn::UpdateChecker::LatestVersionFinder::RegistryError < ::StandardError
  # @return [RegistryError] a new instance of RegistryError
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#19
  def initialize(status, msg); end

  # Returns the value of attribute status.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/latest_version_finder.rb#17
  def status; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/library_detector.rb#11
class Dependabot::NpmAndYarn::UpdateChecker::LibraryDetector
  # @return [LibraryDetector] a new instance of LibraryDetector
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/library_detector.rb#12
  def initialize(package_json_file:, credentials:, dependency_files:); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/library_detector.rb#18
  def library?; end

  private

  # Returns the value of attribute credentials.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/library_detector.rb#26
  def credentials; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/library_detector.rb#26
  def dependency_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/library_detector.rb#56
  def escaped_project_name; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/library_detector.rb#37
  def npm_response_matches_package_json?; end

  # Returns the value of attribute package_json_file.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/library_detector.rb#26
  def package_json_file; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/library_detector.rb#28
  def package_json_may_be_for_library?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/library_detector.rb#60
  def parsed_package_json; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/library_detector.rb#52
  def project_name; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/library_detector.rb#64
  def registry; end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#11
class Dependabot::NpmAndYarn::UpdateChecker::RegistryFinder
  # @return [RegistryFinder] a new instance of RegistryFinder
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#24
  def initialize(dependency:, credentials:, npmrc_file: T.unsafe(nil), yarnrc_file: T.unsafe(nil), yarnrc_yml_file: T.unsafe(nil)); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#37
  def auth_headers; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#41
  def dependency_url; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#33
  def registry; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#51
  def registry_from_rc(dependency_name); end

  private

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#94
  def auth_header_for(token); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#108
  def auth_token; end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#60
  def credentials; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#60
  def dependency; end

  # npm registries expect slashes to be escaped
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#264
  def escaped_dependency_name; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#62
  def first_registry_with_dependency_details; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#212
  def global_registry; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#129
  def known_registries; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#114
  def locked_registry; end

  # Returns the value of attribute npmrc_file.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#60
  def npmrc_file; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#143
  def npmrc_registries; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#276
  def parsed_yarnrc_yml; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#268
  def registry_source_url; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#81
  def registry_url; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#242
  def scoped_registry(scope); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#200
  def unique_registries(registries); end

  # Returns the value of attribute yarnrc_file.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#60
  def yarnrc_file; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#179
  def yarnrc_registries; end

  # Returns the value of attribute yarnrc_yml_file.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#60
  def yarnrc_yml_file; end

  class << self
    # @return [Boolean]
    #
    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#45
    def central_registry?(registry); end
  end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#12
Dependabot::NpmAndYarn::UpdateChecker::RegistryFinder::CENTRAL_REGISTRIES = T.let(T.unsafe(nil), Array)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#18
Dependabot::NpmAndYarn::UpdateChecker::RegistryFinder::NPM_AUTH_TOKEN_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#19
Dependabot::NpmAndYarn::UpdateChecker::RegistryFinder::NPM_GLOBAL_REGISTRY_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#21
Dependabot::NpmAndYarn::UpdateChecker::RegistryFinder::NPM_SCOPED_REGISTRY_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#20
Dependabot::NpmAndYarn::UpdateChecker::RegistryFinder::YARN_GLOBAL_REGISTRY_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/registry_finder.rb#22
Dependabot::NpmAndYarn::UpdateChecker::RegistryFinder::YARN_SCOPED_REGISTRY_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#16
class Dependabot::NpmAndYarn::UpdateChecker::RequirementsUpdater
  # @return [RequirementsUpdater] a new instance of RequirementsUpdater
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#21
  def initialize(requirements:, updated_source:, update_strategy:, latest_resolvable_version:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#35
  def updated_requirements; end

  private

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#59
  def check_update_strategy; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#72
  def initial_req_after_source_change(req); end

  # Returns the value of attribute latest_resolvable_version.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#56
  def latest_resolvable_version; end

  # Returns the value of attribute requirements.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#56
  def requirements; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#127
  def ruby_requirements(requirement_string); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#171
  def update_greatest_version(old_version, version_to_be_permitted); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#132
  def update_range_requirement(req_string); end

  # Returns the value of attribute update_strategy.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#56
  def update_strategy; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#79
  def update_version_requirement(req); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#94
  def update_version_requirement_if_needed(req); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#154
  def update_version_string(req_string); end

  # Returns the value of attribute updated_source.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#56
  def updated_source; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#65
  def updating_from_git_to_npm?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#189
  def version_class; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#105
  def widen_requirement(req); end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#19
Dependabot::NpmAndYarn::UpdateChecker::RequirementsUpdater::ALLOWED_UPDATE_STRATEGIES = T.let(T.unsafe(nil), Array)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#18
Dependabot::NpmAndYarn::UpdateChecker::RequirementsUpdater::SEPARATOR = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/requirements_updater.rb#17
Dependabot::NpmAndYarn::UpdateChecker::RequirementsUpdater::VERSION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#19
class Dependabot::NpmAndYarn::UpdateChecker::SubdependencyVersionResolver
  # @return [SubdependencyVersionResolver] a new instance of SubdependencyVersionResolver
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#20
  def initialize(dependency:, credentials:, dependency_files:, ignored_versions:, latest_allowable_version:, repo_contents_path:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#30
  def latest_resolvable_version; end

  private

  # TODO: We should try and fix this by updating the parent that's not
  # bundled. For this case: `chokidar > fsevents > node-pre-gyp > tar` we
  # would need to update `fsevents`
  #
  # We shouldn't update bundled sub-dependencies as they have been bundled
  # into the release at an exact version by a parent using
  # `bundledDependencies`.
  #
  # For example, fsevents < 2 bundles node-pre-gyp meaning all it's
  # sub-dependencies get bundled into the release tarball at publish time
  # so you always get the same sub-dependency versions if you re-install a
  # specific version of fsevents.
  #
  # Updating the sub-dependency by deleting the entry works but it gets
  # removed from the bundled set of dependencies and moved top level
  # resulting in a bunch of package duplication which is pretty confusing.
  #
  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#205
  def bundled_dependency?; end

  # Returns the value of attribute credentials.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#56
  def credentials; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#56
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#56
  def dependency_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#180
  def dependency_files_builder; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#172
  def filtered_lockfiles; end

  # Returns the value of attribute ignored_versions.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#56
  def ignored_versions; end

  # Returns the value of attribute latest_allowable_version.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#56
  def latest_allowable_version; end

  # Returns the value of attribute repo_contents_path.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#56
  def repo_contents_path; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#139
  def run_npm_updater(path, lockfile_name, lockfile_content); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#127
  def run_pnpm_updater(path, lockfile_name); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#115
  def run_yarn_berry_updater(path, lockfile_name); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#91
  def run_yarn_updater(path, lockfile_name); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#59
  def update_subdependency_in_lockfile(lockfile); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#162
  def updated_dependency; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#158
  def version_class; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/subdependency_version_resolver.rb#76
  def version_from_updated_lockfiles(updated_lockfiles); end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#23
class Dependabot::NpmAndYarn::UpdateChecker::VersionResolver
  # @return [VersionResolver] a new instance of VersionResolver
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#82
  def initialize(dependency:, credentials:, dependency_files:, latest_allowable_version:, latest_version_finder:, repo_contents_path:, dependency_group: T.unsafe(nil)); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#117
  def dependency_updates_from_full_unlock; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#112
  def latest_resolvable_previous_version(updated_version); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#95
  def latest_resolvable_version; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#106
  def latest_version_resolvable_with_full_unlock?; end

  private

  # Returns the value of attribute credentials.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#157
  def credentials; end

  # Returns the value of attribute dependency.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#157
  def dependency; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#157
  def dependency_files; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#671
  def dependency_files_builder; end

  # Returns the value of attribute dependency_group.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#157
  def dependency_group; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#385
  def error_details_from_captures(captures); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#326
  def fetch_peer_dependency_errors(version:); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#489
  def git_dependency?(dep); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#345
  def handle_peer_dependency_errors(message); end

  # Returns the value of attribute latest_allowable_version.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#157
  def latest_allowable_version; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#266
  def latest_types_package_version; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#160
  def latest_version_finder(dep); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#467
  def latest_version_of_dep_with_satisfied_peer_reqs(dep); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#506
  def lockfiles_for_path(lockfiles:, path:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#501
  def newly_broken_peer_reqs_from_dep; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#496
  def newly_broken_peer_reqs_on_dep; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#315
  def old_peer_dependency_errors; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#380
  def old_unmet_peer_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#259
  def original_package; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#284
  def original_package_update_available?; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#206
  def part_of_tightly_locked_monorepo?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#663
  def paths_requiring_update_check; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#306
  def peer_dependency_errors; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#397
  def relevant_unmet_peer_dependencies; end

  # Returns the value of attribute repo_contents_path.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#157
  def repo_contents_path; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#696
  def requirement_class; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#642
  def requirements_for_path(requirements, path); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#172
  def resolve_latest_previous_version(dep, updated_version); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#512
  def run_checker(path:, version:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#620
  def run_npm8_checker(version:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#594
  def run_npm_checker(path:, version:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#539
  def run_pnpm_checker(path:, version:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#556
  def run_yarn_berry_checker(path:, version:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#533
  def run_yarn_checker(path:, version:, lockfile:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#577
  def run_yarn_classic_checker(path:, version:); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#453
  def satisfies_peer_reqs_on_dep?(version); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#427
  def satisfying_versions; end

  # Top level dependencies are required in the peer dep checker
  # to fetch the manifests for all top level deps which may contain
  # "peerDependency" requirements
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#655
  def top_level_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#252
  def types_package; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#270
  def types_update_available?; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#375
  def unmet_peer_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#219
  def updated_monorepo_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#296
  def updated_types_dependencies; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#692
  def version_class; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#680
  def version_for_dependency(dep); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#632
  def version_install_arg(version:); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#700
  def version_regex; end
end

# Error message returned by `npm install` (for NPM 6):
# react-dom@15.2.0 requires a peer of react@^15.2.0 \
# but none is installed. You must install peer dependencies yourself.
#
# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#62
Dependabot::NpmAndYarn::UpdateChecker::VersionResolver::NPM6_PEER_DEP_ERROR_REGEX = T.let(T.unsafe(nil), Regexp)

# Error message returned by `npm install` (for NPM 8):
# npm ERR! Could not resolve dependency:
# npm ERR! peer react@"^16.14.0" from react-dom@16.14.0
#
# or with two semver constraints:
# npm ERR! Could not resolve dependency:
# npm ERR! peer @opentelemetry/api@">=1.0.0 <1.1.0" from @opentelemetry/context-async-hooks@1.0.1
#
# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#76
Dependabot::NpmAndYarn::UpdateChecker::VersionResolver::NPM8_PEER_DEP_ERROR_REGEX = T.let(T.unsafe(nil), Regexp)

# Error message returned by `pnpm update`:
# └─┬ react-dom 15.7.0
#   └── ✕ unmet peer react@^15.7.0: found 16.3.1
#
# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#53
Dependabot::NpmAndYarn::UpdateChecker::VersionResolver::PNPM_PEER_DEP_ERROR_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#26
Dependabot::NpmAndYarn::UpdateChecker::VersionResolver::TIGHTLY_COUPLED_MONOREPOS = T.let(T.unsafe(nil), Hash)

# Error message returned by `yarn add` (for Yarn berry):
# YN0060: │ eve-roster@workspace:. provides jest (p8d618) \
# with version 29.3.0, which doesn't satisfy \
# what ts-jest requests\n
#
# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#45
Dependabot::NpmAndYarn::UpdateChecker::VersionResolver::YARN_BERRY_PEER_DEP_ERROR_REGEX = T.let(T.unsafe(nil), Regexp)

# Error message returned by `yarn add` (for Yarn classic):
# " > @reach/router@1.2.1" has incorrect peer dependency "react@15.x || 16.x || 16.4.0-alpha.0911da3"
# "workspace-aggregator-<random-string> > test > react-dom@15.6.2" has incorrect peer dependency "react@^15.6.2"
# " > react-burger-menu@1.9.9" has unmet peer dependency "react@>=0.14.0 <16.0.0"
#
# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/version_resolver.rb#34
Dependabot::NpmAndYarn::UpdateChecker::VersionResolver::YARN_PEER_DEP_ERROR_REGEX = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/vulnerability_auditor.rb#18
class Dependabot::NpmAndYarn::UpdateChecker::VulnerabilityAuditor
  # @return [VulnerabilityAuditor] a new instance of VulnerabilityAuditor
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/vulnerability_auditor.rb#19
  def initialize(dependency_files:, credentials:, allow_removal: T.unsafe(nil)); end

  # Finds any dependencies in the `package-lock.json` or `npm-shrinkwrap.json` that have
  # a subdependency on the given dependency that is locked to a vuln version range.
  #
  # NOTE: yarn is currently not supported.
  #
  # @param dependency [Dependabot::Dependency] the dependency to check
  # @param security_advisories [Array<Dependabot::SecurityAdvisory>] advisories for the dependency
  # @return [Hash<String, [String, Array<Hash<String, String>>]>] the audit results
  #   * :dependency_name [String] the name of the dependency
  #   * :fix_available [Boolean] whether a fix is available
  #   * :current_version [String] the version of the dependency
  #   * :target_version [String] the version of the dependency after the fix
  #   * :fix_updates [Array<Hash<String, String>>] a list of dependencies to update in order to fix
  #   * :dependency_name [String] the name of the blocking dependency
  #   * :current_version [String] the current version of the blocking dependency
  #   * :target_version [String] the target version of the blocking dependency
  #   * :top_level_ancestors [Array<String>] the names of top-level dependencies with a transitive
  #   dependency on the blocking dependency
  #   * :top_level_ancestors [Array<String>] the names of all top-level dependencies with a transitive
  #   dependency on the dependency
  #   * :explanation [String] an explanation for why the project failed the vulnerability auditor run
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/vulnerability_auditor.rb#47
  def audit(dependency:, security_advisories:); end

  private

  # Returns the value of attribute credentials.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/vulnerability_auditor.rb#104
  def credentials; end

  # Returns the value of attribute dependency_files.
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/vulnerability_auditor.rb#104
  def dependency_files; end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/vulnerability_auditor.rb#132
  def dependency_still_vulnerable?(audit_result, security_advisories); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/vulnerability_auditor.rb#140
  def downgrades_dependencies?(audit_result); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/vulnerability_auditor.rb#148
  def downgrades_version?(current_version, target_version); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/vulnerability_auditor.rb#106
  def explain_fix_unavailable(validation_result, dependency); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/vulnerability_auditor.rb#156
  def fix_incomplete?(audit_result); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/vulnerability_auditor.rb#161
  def log_helper_subprocess_failure(dependency, error); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/vulnerability_auditor.rb#118
  def validate_audit_result(audit_result, security_advisories); end

  # @return [Boolean]
  #
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/update_checker/vulnerability_auditor.rb#128
  def vulnerable_dependency_removed?(audit_result); end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/version.rb#15
class Dependabot::NpmAndYarn::Version < ::Dependabot::Version
  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/version.rb#46
  sig { override.params(version: T.any(::Gem::Version, ::String)).void }
  def initialize(version); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/version.rb#71
  sig { params(other: ::Dependabot::NpmAndYarn::Version).returns(T::Boolean) }
  def backwards_compatible_with?(other); end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/version.rb#19
  sig { returns(::String) }
  def build_info; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/version.rb#86
  sig { override.returns(::String) }
  def inspect; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/version.rb#56
  sig { returns(::Integer) }
  def major; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/version.rb#61
  sig { returns(::Integer) }
  def minor; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/version.rb#66
  sig { returns(::Integer) }
  def patch; end

  # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/version.rb#81
  sig { override.returns(::String) }
  def to_s; end

  class << self
    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/version.rb#25
    sig { override.params(version: T.nilable(T.any(::Gem::Version, ::String))).returns(T::Boolean) }
    def correct?(version); end

    # source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/version.rb#34
    sig do
      params(
        version: T.nilable(T.any(::Gem::Version, ::String))
      ).returns(T.nilable(T.any(::Gem::Version, ::String)))
    end
    def semver_for(version); end
  end
end

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/version.rb#22
Dependabot::NpmAndYarn::Version::ANCHORED_VERSION_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://dependabot-npm_and_yarn//lib/dependabot/npm_and_yarn/version.rb#21
Dependabot::NpmAndYarn::Version::VERSION_PATTERN = T.let(T.unsafe(nil), String)
