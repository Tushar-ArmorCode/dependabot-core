# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `dependabot-git_submodules` gem.
# Please instead update this file by running `bin/tapioca gem dependabot-git_submodules`.

# source://dependabot-git_submodules//lib/dependabot/git_submodules/file_fetcher.rb#9
module Dependabot
  class << self
    # source://dependabot-common/0.234.0/lib/dependabot/logger.rb#7
    def logger; end

    # source://dependabot-common/0.234.0/lib/dependabot/logger.rb#11
    def logger=(logger); end
  end
end

# source://dependabot-git_submodules//lib/dependabot/git_submodules/file_fetcher.rb#10
module Dependabot::GitSubmodules; end

# source://dependabot-git_submodules//lib/dependabot/git_submodules/file_fetcher.rb#11
class Dependabot::GitSubmodules::FileFetcher < ::Dependabot::FileFetchers::Base
  private

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_fetcher.rb#22
  def fetch_files; end

  # @raise [Dependabot::DependencyFileNotFound]
  #
  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_fetcher.rb#75
  def fetch_github_submodule_commit(path); end

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_fetcher.rb#49
  def fetch_submodule_ref_from_host(submodule_path); end

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_fetcher.rb#29
  def gitmodules_file; end

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_fetcher.rb#41
  def submodule_paths; end

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_fetcher.rb#33
  def submodule_refs; end

  class << self
    # @return [Boolean]
    #
    # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_fetcher.rb#12
    def required_files_in?(filenames); end

    # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_fetcher.rb#16
    def required_files_message; end
  end
end

# source://dependabot-git_submodules//lib/dependabot/git_submodules/file_parser.rb#12
class Dependabot::GitSubmodules::FileParser < ::Dependabot::FileParsers::Base
  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_parser.rb#13
  def parse; end

  private

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_parser.rb#42
  def absolute_url(url); end

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_parser.rb#62
  def check_required_files; end

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_parser.rb#58
  def gitmodules_file; end

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_parser.rb#51
  def submodule_sha(path); end
end

# source://dependabot-git_submodules//lib/dependabot/git_submodules/file_updater.rb#9
class Dependabot::GitSubmodules::FileUpdater < ::Dependabot::FileUpdaters::Base
  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_updater.rb#14
  def updated_dependency_files; end

  private

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_updater.rb#25
  def check_required_files; end

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_updater.rb#20
  def dependency; end

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_updater.rb#31
  def submodule; end

  class << self
    # source://dependabot-git_submodules//lib/dependabot/git_submodules/file_updater.rb#10
    def updated_files_regex; end
  end
end

# source://dependabot-git_submodules//lib/dependabot/git_submodules/metadata_finder.rb#9
class Dependabot::GitSubmodules::MetadataFinder < ::Dependabot::MetadataFinders::Base
  private

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/metadata_finder.rb#12
  def look_up_source; end
end

# source://dependabot-git_submodules//lib/dependabot/git_submodules/requirement.rb#11
class Dependabot::GitSubmodules::Requirement < ::Gem::Requirement
  # Patches Gem::Requirement to make it accept requirement strings like
  # "~> 4.2.5, >= 4.2.5.1" without first needing to split them.
  #
  # @return [Requirement] a new instance of Requirement
  #
  # source://dependabot-git_submodules//lib/dependabot/git_submodules/requirement.rb#18
  def initialize(*requirements); end

  class << self
    # For consistency with other languages, we define a requirements array.
    # Ruby doesn't have an `OR` separator for requirements, so it always
    # contains a single element.
    #
    # source://dependabot-git_submodules//lib/dependabot/git_submodules/requirement.rb#12
    def requirements_array(requirement_string); end
  end
end

# source://dependabot-git_submodules//lib/dependabot/git_submodules/update_checker.rb#11
class Dependabot::GitSubmodules::UpdateChecker < ::Dependabot::UpdateCheckers::Base
  # source://dependabot-git_submodules//lib/dependabot/git_submodules/update_checker.rb#16
  def latest_resolvable_version; end

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/update_checker.rb#21
  def latest_resolvable_version_with_no_unlock; end

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/update_checker.rb#12
  def latest_version; end

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/update_checker.rb#26
  def updated_requirements; end

  private

  # source://dependabot-git_submodules//lib/dependabot/git_submodules/update_checker.rb#43
  def fetch_latest_version; end

  # @return [Boolean]
  #
  # source://dependabot-git_submodules//lib/dependabot/git_submodules/update_checker.rb#34
  def latest_version_resolvable_with_full_unlock?; end

  # @raise [NotImplementedError]
  #
  # source://dependabot-git_submodules//lib/dependabot/git_submodules/update_checker.rb#39
  def updated_dependencies_after_full_unlock; end
end

# source://dependabot-git_submodules//lib/dependabot/git_submodules/version.rb#9
class Dependabot::GitSubmodules::Version < ::Dependabot::Version; end
